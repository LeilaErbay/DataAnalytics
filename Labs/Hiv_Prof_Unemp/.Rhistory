install.packages(swirl)
install.packages("swirl")
source('~/.active-rstudio-document', echo=TRUE)
print(add(1,2))
print(add(1,2))
print(add(1,2))
print(add(10,20))
source('~/.active-rstudio-document', echo=TRUE)
print(add(1,2))
print(add(10,20))
source('~/.active-rstudio-document', echo=TRUE)
variable
source('~/.active-rstudio-document', echo=TRUE)
vector1
source('~/.active-rstudio-document', echo=TRUE)
vector2
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
19.71*1.15
install.packages("dslabs")
library(dslabs)
a<-1
b <-1, c<-1
b <-1
c <-1
a
print(a)
ls()
vector1
x
n
ls
source('~/.active-rstudio-document')
source('~/Untitled.R')
c<-1
(-b + sqrt(b^2 - 4*a*c))/(2*a)
(-b - sqrt(b^2 - 4*a*c))/(2*a)
source('~/Untitled.R', echo=TRUE)
x
library(dslabs)
data("murders")
data(murders)
class(murders)
View(murders)
str(murders)
murders $population
library(dslabs)
data(murders)
sort(murders)
data(total)
sort(total)
sort(murders,total)
library(slabs)
sort(murders$total)
index <- order(murders$total)
murders$abb[index]
kaggle competitions download -c titanic
kaggle competitions download -c titanic
library("ggplot2")
library('ggthemes')
library("ggthemes")
library("scales")
library("dplyr")
library("mice")
library("randomForest")
library('scales')
library("ggthemes")
library("ggplot2-ggthemes")
library("ggtheme")
install.packages("ggthemes")
install.packages("scales")
install.packages("scales")
install.packages('ggplot2')
install.packages("ggplot2")
install.packages("dplyr")
install.packages("mice")
install.packages("randomForest")
library('ggplot2')
library("ggthemes")
library("scales")
library("dplyr")
library("mice")
library("randomForest")
train <- read.csv('../input/train.csv', stringsAsFactors = F)
test  <- read.csv('../input/test.csv', stringsAsFactors = F)
kaggle competitions download -c titanic
kaggle competitions download -c titanic
?plot
source('~/Desktop/LevelNeu2018/R-Scripts/intro.R')
x<- 2
y <-3
x = y
x <- y
plot(c(0, 1), c(0, 1), type = "p")
library("boot", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:boot", unload=TRUE)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:ggplot2", unload=TRUE)
install.packages(readxl)
install.packages("readxl")
browseVignettes("ggplot2")
"8isthebest" + 2
"8" + 2
"8" +2
8
typeof(8)
typeof(8L)
typeof(8.0L)
typeof(8.0)
typeof(8L)
as.integer("8")
typeof(8)
as.integer("8isthebest" + 2)
typeof(as.integer("8"))
?hist
?qqplot
qqplot(murders)
?plot
?ggplot
library(ggplot2)
?ggplot2
install.packages("grDevices")
install.packages("grDevices")
?tible
??tible
?read_excel
?readxl
?class
?typeof
which.max
?which.max
?sample
?set.seed
.Random.seed?
?.Random.seed
?binomial
?rbinom
trials <- numeric(length = 100)
#sum(rbinom(20,20, 0.618))
for(i in seq_along(trials)){
trials[i] <- sum(rbinom(1,20, 0.618))
}
trials <- numeric(length = 100)
#sum(rbinom(20,20, 0.618))
for(i in seq_along(trials)){
trials[i] <- sum(rbinom(1,20, 0.618))
}
hist(trials)
?binom?
?binom
?binom
trials <- numeric(length = 100)
#sum(rbinom(20,20, 0.618))
for(i in seq_along(trials)){
trials[i] <- sum(rbinom(20,1, 0.618))
}
hist(trials)
#
hist(rbinom(20,100, 0.618))
#
hist(sum(rbinom(20,100, 0.618)))
#
hist(rbinom(20,100, 0.618))
trials <- numeric(length = 100)
#sum(rbinom(20,20, 0.618))
for(i in seq_along(trials)){
trials[i] <- sum(rbinom(20,1, 0.618))
}
hist(trials)
mean(trials)
trials <- numeric(length = 1000)
#sum(rbinom(20,20, 0.618))
for(i in seq_along(trials)){
trials[i] <- sum(rbinom(20,1, 0.618))
}
mean(trials)
hist(trials)
trials <- numeric(length = 100)
#sum(rbinom(20,20, 0.618))
for(i in seq_along(trials)){
trials[i] <- sum(rbinom(20,1, 0.618))
}
mean(trials)
hist(trials)
var(trials)
trialsOt <- numeric(length=100)
for(i in seq_along(trialsOt)){
trialsOt[i] <- sum(rbinom(15,1,.414))
}
mean(trialsOt)
var(trialsOt)
meanW <- 3*meanOt + 2*meanOb + 10
varW <- 9*varOt + 4*varOb + 100
#p = 0.618
#n = 20
#size = 20
#
hist(rbinom(20,100, 0.618))
trials <- numeric(length = 100)
#sum(rbinom(20,20, 0.618))
for(i in seq_along(trials)){
trials[i] <- sum(rbinom(20,1, 0.618))
}
meanOb <-mean(trials)
varOb <-var(trials)
hist(trials)
#
trialsOt <- numeric(length=100)
for(i in seq_along(trialsOt)){
trialsOt[i] <- sum(rbinom(15,1,.414))
}
meanOt <-mean(trialsOt)
varOt <-var(trialsOt)
meanW <- 3*meanOb + 2*meanOt + 10
varW <- 9*varOb + 4*varOt + 100
varW <- 9*varOb + 4*varOt
n <- 1:15
ifelse(n %% 3 ==0 , "divisible by 3", "not divisible by 3")
df <- c(n,NULL)
df <- as.data.frame(c(n,NULL))
View(df)
df <- as.data.frame(c(n,result))
n <- 1:15
result <- NULL
df <- as.data.frame(c(n,result))
df <- as.data.frame(n)
View(df)
df <- cbind(NULL)
df <- cbind(result)
df <- as.data.frame(n)
df <- cbind(result)
df <- cbind(result)
result <- NA
df <- as.data.frame(n)
df <- cbind(result)
View(df)
df <- as.data.frame(n)
result <-ifelse(n %% 3 ==0 , "divisible by 3", "not divisible by 3")
df <- cbind(as.data.frame(result))
View(df)
n <- 1:15
df <- as.data.frame(n)
result <-ifelse(n %% 3 ==0 , "divisible by 3", "not divisible by 3")
df[,2] <- cbind(as.data.frame(result))
n <- 1:15
df <- as.data.frame(n)
df[,2] <- ifelse(n %% 3 ==0 , "divisible by 3", "not divisible by 3")
View(df)
?seq
?matrix
x <- matrix(NULL, 5,5)
for(i in 1:nrow(x)) {
for(j in 1:ncol(x)) {
x[i,j] <- (i+j)^2
}
x <- matrix(NULL, 5,5)
for(i in 1:nrow(x)) {
for(j in 1:ncol(x)) {
x[i,j] <- (i+j)^2
}
}
source('~/.active-rstudio-document', echo=TRUE)
x <- matrix(NULL, 5,5)
x <- matrix(NULL, 5,5)
x <- matrix(NA, 5,5)
x <- matrix(NA, 5,5)
for(i in 1:nrow(x)) {
for(j in 1:ncol(x)) {
x[i,j] <- (i+j)^2
}
}
View(x)
x <- matrix(NA, 5,5)
View(x)
for(i in 1:nrow(x)) {
for(j in 1:ncol(x)) {
x[i,j] <- (i+j)^2
}
}
df <- cbind(df,ifelse(n %% 3 ==0 , "divisible by 3", "not divisible by 3"))
n <- 1:15
df <- as.data.frame(n)
df <- cbind(df,ifelse(n %% 3 ==0 , "divisible by 3", "not divisible by 3"))
View(df)
lapply(list, function)
lapply
setwd("/Users/LeilaErbay/Desktop/LevelNeu2018/Labs/Lab8")
hivData <- read.csv("region_prevalence.csv")
View(hivData)
hivData$Total <- cbind(hivData, NA)
hivData <- read.csv("region_prevalence.csv")
hivData$Total <- cbind( NA)
cbind(hivData, NA)
hivData<- cbind(hivData, NA)
View(hivData)
hivData$NA <- "Totals"
names(hivData[,3]) <- "Totals"
View(hivData)
names(hivData)[3] <- "Totals"
posGivenHiv <- 0.990
posGivenNHiv <- 0.985
for (prob in hivData[,2]){
hivData[,3] <- posGivenHiv* prob + posGivenNHiv*(1-prob)
}
hivData$Totals <- posGivenHiv* hivData$Adult_Prevalence + posGivenNHiv*(1-hivData$Adult_Prevalence)
hivData<- cbind(hivData, NA)
names(hivData)[4] <- "hivGivenPos"
names(hivData)[4] <- "posterior"
hivData$posterior<- (posGivenHiv* hivData$Adult_Prevalence) / hivData$Totals
names(hivData)[3] <- "positive test"
names(hivData)[3] <- "posTest"
hivData$posterior<- (posGivenHiv* hivData$Adult_Prevalence) / hivData$posTest
lebanonPatient <- hivData[8,]
View(lebanonPatient)
#calculate the positive test totals per region
hivData$posTest <- posGivenHiv* hivData$Adult_Prevalence + posGivenNHiv*(hivData$Adult_Prevalence)
#calculate the positive test totals per region
hivData$posTest <- posGivenHiv* hivData$Adult_Prevalence + posGivenNHiv*(1-hivData$Adult_Prevalence)
posGivenNHiv <- 0.15
#calculate the positive test totals per region
hivData$posTest <- posGivenHiv* hivData$Adult_Prevalence + posGivenNHiv*(1-hivData$Adult_Prevalence)
hivData<- cbind(hivData, NA)
names(hivData)[4] <- "posterior"
#calculate the posterior values per region
hivData$posterior<- (posGivenHiv* hivData$Adult_Prevalence) / hivData$posTest
lebanonPatient <- hivData[8,]
osGivenHiv <- 0.990
posGivenNHiv <- 0.015
#calculate the positive test totals per region
hivData$posTest <- posGivenHiv* hivData$Adult_Prevalence + posGivenNHiv*(1-hivData$Adult_Prevalence)
hivData<- cbind(hivData, NA)
names(hivData)[4] <- "posterior"
hivData$posterior<- (posGivenHiv* hivData$Adult_Prevalence) / hivData$posTest
lebanonPatient <- hivData[8,]
hivData <- hivData[, 1:3]
#TITLE: HIV LAB
#Author: LEILA ERBAY
hivData <- read.csv("region_prevalence.csv")
hivData<- cbind(hivData, NA)
names(hivData)[3] <- "posTest"
#Values from General Test
posGivenHiv <- 0.990
posGivenNHiv <- 0.015
#calculate the positive test totals per region
hivData$posTest <- posGivenHiv* hivData$Adult_Prevalence + posGivenNHiv*(1-hivData$Adult_Prevalence)
hivData<- cbind(hivData, NA)
names(hivData)[4] <- "posterior"
#calculate the posterior values per region
hivData$posterior<- (posGivenHiv* hivData$Adult_Prevalence) / hivData$posTest
lebanonPatient <- hivData[8,]
hivData <- hivData[, 1:4]
hivData <- cbind(hivData, NA)
names(hivData)[5] <- "pos2Tests"
hivData$pos2Tests <- (posGivenHiv^2)*hivData$Adult_Prevalence + (posGivenNHiv^2)*(1-hivData$Adult_Prevalence)
hivData <- cbind(hivData, NA)
names(hivData)[6] <- "posterior2Test"
hivData$posterior2Test <- ((posGivenHiv^2)*hivData$Adult_Prevalence)/hivData$pos2Tests
?sum
getwd()
library(readxl)
profData <- read_excel("Professor Salaries - Data.xlsx")
profData <- read_excel("Professor Salaries - Data.xlsx")
View(profData)
#Q1
probA <- sum(profData$rank == "A" & profData$salary >100000) / sum(profData$salary >100000)
#Q1
probA <- sum(profData$discipline == "A" & profData$salary >100000) / sum(profData$salary >100000)
#TITLE: HIV LAB
#Author: LEILA ERBAY
hivData <- read.csv("region_prevalence.csv")
hivData<- cbind(hivData, NA)
names(hivData)[3] <- "posTest"
#Values from General Test
posGivenHiv <- 0.990
posGivenNHiv <- 0.015
#calculate the positive test totals per region
hivData$posTest <- posGivenHiv* hivData$Adult_Prevalence + posGivenNHiv*(1-hivData$Adult_Prevalence)
hivData<- cbind(hivData, NA)
names(hivData)[4] <- "posterior"
#calculate the posterior values per region
hivData$posterior<- (posGivenHiv* hivData$Adult_Prevalence) / hivData$posTest
lebanonPatient <- hivData[8,]
hivData <- hivData[, 1:4]
hivData <- cbind(hivData, NA)
names(hivData)[5] <- "pos2Tests"
hivData$pos2Tests <- (posGivenHiv^2)*hivData$Adult_Prevalence + (posGivenNHiv^2)*(1-hivData$Adult_Prevalence)
hivData <- cbind(hivData, NA)
names(hivData)[6] <- "posterior2Test"
hivData$posterior2Test <- ((posGivenHiv^2)*hivData$Adult_Prevalence)/hivData$pos2Tests
View(hivData)
#Q2
probSalExpGender <- sum(profData$salary > 100000 & (profData$yrs.service >20 * profData$sex == "Male")) / sum(profData$yrs.service >20 * profData$sex == "Male")
#Q2
probSalExpGender <- sum(profData$salary > 100000 & (profData$yrs.service >20 & profData$sex == "Male")) / sum(profData$yrs.service >20 & profData$sex == "Male")
#TITLE: PROFESSORS LAB
#AUTHOR: LEILA ERBAY
library(readxl)
profData <- read_excel("Professor Salaries - Data.xlsx")
#Q1
probA <- sum(profData$discipline == "A" & profData$salary >100000) / sum(profData$salary >100000)
#Q2
probSalExpGender <- sum(profData$salary > 100000 & (profData$yrs.service >20 & profData$sex == "Male")) / sum(profData$yrs.service >20 & profData$sex == "Male")
#TITLE: PROFESSORS LAB
#AUTHOR: LEILA ERBAY
library(readxl)
profData <- read_excel("Professor Salaries - Data.xlsx")
#Q1
probQ1 <- sum(profData$discipline == "A" & profData$salary >100000) / sum(profData$salary >100000)
#Q2
probQ2 <- sum(profData$salary > 100000 & (profData$yrs.service >20 & profData$sex == "Male")) / sum(profData$yrs.service >20 & profData$sex == "Male")
#
probQ3a <- sum(profData$sex == "Female" & profData$rank== "AssocProf") / nrows(profData)
probQ3a <- sum(profData$sex == "Female" & profData$rank== "AssocProf") / nrow(profData)
probQ3b <- sum(sum(profData$sex == "Female" & profData$rank== "AssocProf" & profData$yrs.since.phd > 10) / nrow(profData)
)
#Q3b = 0.022670
probQ3b <- sum(profData$sex == "Female" & profData$rank== "AssocProf" & profData$yrs.since.phd > 10) / nrow(profData)
#Q4
probQ4 <- sum(profData$salary <100000 & ( profData$sex == "Male" & profData$yrs.service <10)) / sum(profData$sex == "Male" & profData$yrs.service <10)
library(readxl)
unemplmt <- read_excel("Unemployment Lab - Data.xlsx")
View(unemplmt)
probA <- sum(unemplmt$joblost == "slack_work") / nrow(unemplmt)
probB <- sum(unemplmt$tenure <10) / nrow(unemplmt)
#B | A = B & A/ A
probBgivenA <- sum(unemplmt$tenure < 10 & unemplmt$joblost == "slack_work") / sum(unemplmt$joblost == "slack_work")
probAgivenB <- sum(unemplmt$tenure < 10 & unemplmt$joblost == "slack_work") / sum(unemplmt$tenure < 10)
probBCgiveA <- sum(unemplmt$sex == "Male" & unemplmt$nwhite == "no" & unemplmt$joblost == "slack_work") / probA
probBCgiveA <- sum(unemplmt$sex == "Male" & unemplmt$nwhite == "no" & unemplmt$joblost == "slack_work") / sum(unemplmt$joblost == "slack_work")
probBCgiveA <- sum(unemplmt$sex == "male" & unemplmt$nwhite == "no" & unemplmt$joblost == "slack_work") / sum(unemplmt$joblost == "slack_work")
jointProb <- sum(unemplmt$sex == "female" & unemplmt$dykids == "yes")
jointProb <- sum(unemplmt$sex == "female" & unemplmt$dykids == "yes") / nrow(unemplmt)
addProb <- sum(unemplmt$joblost == "slack_work" | unemplmt$joblost == "position_abolished") /nrow(unemplmt)
check <- sum(unemplmt$joblost == "slack_work") /nrow(unemplmt) + sum(unemplmt$joblost == "position_abolished") /nrow(unemplmt)
?filter
qE <- sum(unemplmt$nwhite == "yes" & unemplmt$sex == "female" & unemplmt$dykids == "yes" & unemplmt$joblost =="slack_work") / nrow(unemplmt)
#P(heads and age>=20 & age < 30)
qF <- sum(unemplmt$head == "yes" & unemplmt$age >19 $unemplmt$age <30) /nrow(unemplmt)
#P(heads and age>=20 & age < 30)
qF <- sum(unemplmt$head == "yes" & unemplmt$age >19 & $unemplmt$age < 30) /nrow(unemplmt)
#P(heads and age>=20 & age < 30)
qF <- sum(unemplmt$head == "yes" & unemplmt$age >19 & unemplmt$age < 30) /nrow(unemplmt)
#P(exp < 5)
qG <- sum(unemplmt$tenure < 5) /nrow(unemplmt)
#P(Slack) vs P(Other)
probSlack <- sum(unemplmt$joblost == "slack_work") / nrow(unemplmt)
probOther <- sum(unemplmt$joblost == "other") / nrow(unemplmt)
#P(male) vs P(female)
probMale <- sum(unemplmt$sex == "male")/nrow(unemplmt)
probFemale <- sum(unemplmt$sex == "female") / nrow(unemplmt)
