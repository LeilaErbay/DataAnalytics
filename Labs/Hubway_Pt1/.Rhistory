library(plyr)
numRides <- count(trips,"bike_nr")
maxValue <- numRides[which.max(numRides[ ,2 ]),] #B00401
minValue <- numRides[which.min(numRides[,2]),] #T01093
#duration of each bike: need bike, duration
duration2 <- count(trips, "bike_nr", "duration")
duration <- aggregate(duration~bike_nr, data= trips, sum)
longestRidden <- duration2[which.max(duration2[, 'freq']),] #B00585
shortestRidden <- duration2[which.min(duration2[, 'freq']),] #T01380
#SPECIFYING BIKE B00585
longestRiddenDF <- trips[trips$bike_nr == "B00585",]
freqEnd <- count(longestRiddenDF, "end_statn")
mostFreqEnd <- freqEnd[freqEnd$freq == max(freqEnd$freq),]
freqStart <- count(longestRiddenDF, "strt_statn")
mostFreqStart <- freqStart[freqStart$freq == max(freqStart$freq),]
#for bike B00585
mostFreqEndSttn <- stations[stations$id == mostFreqEnd$end_statn,]
mostFreqEndSttn$station #South Station
mostFreqStartSttn <- stations[stations$id == mostFreqStart$strt_statn,]
mostFreqStartSttn$station #South Station
View(duration)
longestRidden <- duration2[which.max(duration2[, 'freq']),] #B00585
##ANOTHER WAY
duration <- aggregate(duration~bike_nr, data= trips, sum)
data.frame(duration)
df <- data.frame(duration)
View(df)
?aggregate
##ANOTHER WAY
#duration <- aggregate(duration~bike_nr, data= trips, sum)
duration <- summaryBy(duration~bike_nr,data = trips, sum )
##ANOTHER WAY
#duration <- aggregate(duration~bike_nr, data= trips, sum)
duration <- summaryBy(duration~bike_nr,data = trips,FUN= sum )
View(duration)
#duration of each bike: need bike, duration
duration <- count(trips, "bike_nr", "duration")
?tapply
##OTHER WAYS TO FIND DURATION
#duration <- aggregate(duration~bike_nr, data= trips, sum)
#duration <- summaryBy(duration~bike_nr,data = trips,FUN= sum )
duration <- tapply(trips$duration, trips$bike_nr, sum)
##OTHER WAYS TO FIND DURATION
#duration <- aggregate(duration~bike_nr, data= trips, sum)
#duration <- summaryBy(duration~bike_nr,data = trips,FUN= sum )
duration <- data.fram(tapply(trips$duration, trips$bike_nr, sum))
##OTHER WAYS TO FIND DURATION
#duration <- aggregate(duration~bike_nr, data= trips, sum)
#duration <- summaryBy(duration~bike_nr,data = trips,FUN= sum )
duration <- data.frame(tapply(trips$duration, trips$bike_nr, sum))
View(duration)
View(df)
longestRidden <- duration[which.max(duration[, 'freq']),] #B00585
shortestRidden <- duration[which.min(duration[, 'freq']),] #T01380
#duration of each bike: need bike, duration
duration <- count(trips, "bike_nr", "duration")
longestRidden <- duration[which.max(duration[, 'freq']),] #B00585
shortestRidden <- duration[which.min(duration[, 'freq']),] #T01380
#SPECIFYING BIKE B00585
longestRiddenDF <- trips[trips$bike_nr == "B00585",]
View(longestRiddenDF)
freqEnd2 <- aggregate(end_statn~bike_nr=="B00585", data = longestRiddenDF, sum)
View(freqEnd2)
freqEnd2 <- aggregate(end_statn~bike_nr=="B00585", data = longestRiddenDF, length)
View(freqEnd2)
?aggregate
freqEnd2 <- aggregate(end_statn~bike_nr=="B00585", data = longestRiddenDF, max)
View(freqEnd2)
freqEnd2 <- aggregate(end_statn~bike_nr=="B00585", data = longestRiddenDF, freq)
freqEnd2 <- aggregate(end_statn~bike_nr=="B00585", data = longestRiddenDF, count)
View(freqEnd)
View(freqEnd2)
freqEnd2 <- aggregate(end_statn~bike_nr, data = longestRiddenDF, sum)
View(freqEnd2)
freqEnd2 <- aggregate(end_statn~bike_nr, data = longestRiddenDF, length)
View(freqEnd2)
freqEnd2 <- aggregate(end_statn~bike_nr, data = longestRiddenDF, )
freqEnd2 <- summaryBy(end_statn~bike_nr, data = longestRiddenDF, length)
freqEnd2 <- summaryBy(end_statn~bike_nr, data = longestRiddenDF, FUN =length)
View(freqEnd2)
#OTHER WAYS TO FIND
freqEnd2 <- summaryBy(end_statn~bike_nr, data = longestRiddenDF, FUN =length)
View(freqEnd2)
#OTHER WAYS TO FIND
freqEnd2 <- summaryBy(end_statn~bike_nr, data = longestRiddenDF, )
View(freqEnd2)
#OTHER WAYS TO FIND
freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF, length)
#OTHER WAYS TO FIND
freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
View(freqEnd2)
freqEnd2 <- aggregate(bike_nr~end_statn, data = longestRiddenDF, FUN =length)
View(freqEnd2)
#OTHER WAYS TO FIND
#freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
freqEnd2 <- aggregate(bike_nr~end_statn, data = longestRiddenDF, FUN =length)
View(freqEnd2)
#OTHER WAYS TO FIND
#freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
#freqEnd2 <- aggregate(bike_nr~end_statn, data = longestRiddenDF, FUN =length)
freqEnd2 <- tapply(trips$end_statn, trips$bikes_nr, FUN = length)
#OTHER WAYS TO FIND
#freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
#freqEnd2 <- aggregate(bike_nr~end_statn, data = longestRiddenDF, FUN =length)
freqEnd2 <- tapply(freqEnd$end_statn, freqEnd$bikes_nr, FUN = length)
freqEnd <- count(longestRiddenDF, "end_statn")
freqEnd <- count(longestRiddenDF, "end_statn")
View(freqEnd)
#OTHER WAYS TO FIND
#freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
#freqEnd2 <- aggregate(bike_nr~end_statn, data = longestRiddenDF, FUN =length)
freqEnd2 <- tapply(longestRiddenDF$end_statn, longestRiddenDF$bikes_nr, FUN = length)
tapply(vector, index, function)
?tapply
#OTHER WAYS TO FIND
#freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
#freqEnd2 <- aggregate(bike_nr~end_statn, data = longestRiddenDF, FUN =length)
freqEnd2 <- tapply(longestRiddenDF$bikes_nr,longestRiddenDF$end_statn, FUN = length)
#OTHER WAYS TO FIND
#freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
freqEnd2 <- aggregate(bike_nr~end_statn, data = longestRiddenDF, FUN =length)
View(freqEnd2)
#OTHER WAYS TO FIND
freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
View(freqEnd)
View(freqEnd2)
#OTHER WAYS TO FIND
#freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
#freqEnd2 <- aggregate(bike_nr~end_statn, data = longestRiddenDF, FUN =length)
freqEnd2 <- tapply(longestRiddenDF$bikes_nr,longestRiddenDF$end_statn, FUN = length)
#OTHER WAYS TO FIND
#freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
#freqEnd2 <- aggregate(bike_nr~end_statn, data = longestRiddenDF, FUN =length)
freqEnd2 <- tapply(longestRiddenDF$bikes_nr,longestRiddenDF$end_statn, FUN = sum)
#OTHER WAYS TO FIND
#freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
#freqEnd2 <- aggregate(bike_nr~end_statn, data = longestRiddenDF, FUN =length)
freqEnd2 <- tapply(longestRiddenDF$bikes_nr,longestRiddenDF$end_statn, FUN = sum)
#OTHER WAYS TO FIND
#freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
#freqEnd2 <- aggregate(bike_nr~end_statn, data = longestRiddenDF, FUN =length)
freqEnd2 <- tapply(longestRiddenDF$bikes_nr,longestRiddenDF$end_statn, FUN = length)
#OTHER WAYS TO FIND
#freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
#freqEnd2 <- aggregate(bike_nr~end_statn, data = longestRiddenDF, FUN =length)
freqEnd2 <- tapply(longestRiddenDF$bikes_nr,longestRiddenDF$end_statn)
?table
?tapply
#OTHER WAYS TO FIND
#freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
#freqEnd2 <- aggregate(bike_nr~end_statn, data = longestRiddenDF, FUN =length)
freqEnd2 <- tapply(longestRiddenDF$bikes_nr,longestRiddenDF$end_statn, FUN = length)
#OTHER WAYS TO FIND
#freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
#freqEnd2 <- aggregate(bike_nr~end_statn, data = longestRiddenDF, FUN =length)
freqEnd2 <- tapply(trips$end_statn,trips$bikes_nr, FUN = length)
##OTHER WAYS TO FIND DURATION
#duration <- aggregate(duration~bike_nr, data= trips, sum)
#duration <- summaryBy(duration~bike_nr,data = trips,FUN= sum )
duration <- data.frame(tapply(trips$duration, trips$bike_nr, sum))
View(duration)
#OTHER WAYS TO FIND MAX FREQUENT END STATION
#freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
#freqEnd2 <- aggregate(bike_nr~end_statn, data = longestRiddenDF, FUN =length)
freqEnd2 <- tapply(longestRiddenDF$end_statn,longestRiddenDF$hubway_id, length)
#OTHER WAYS TO FIND MAX FREQUENT END STATION
#freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
#freqEnd2 <- aggregate(bike_nr~end_statn, data = longestRiddenDF, FUN =length)
freqEnd2 <- dasta.frame(tapply(longestRiddenDF$end_statn,longestRiddenDF$hubway_id, length))
#OTHER WAYS TO FIND MAX FREQUENT END STATION
#freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
#freqEnd2 <- aggregate(bike_nr~end_statn, data = longestRiddenDF, FUN =length)
freqEnd2 <- data.frame(tapply(longestRiddenDF$end_statn,longestRiddenDF$hubway_id, length))
View(freqEnd2)
#OTHER WAYS TO FIND MAX FREQUENT END STATION
#freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
#freqEnd2 <- aggregate(bike_nr~end_statn, data = longestRiddenDF, FUN =length)
freqEnd2 <- data.frame(tapply(longestRiddenDF$hubway_id,longestRiddenDF$end_statn, length))
View(freqEnd2)
#OTHER WAYS TO FIND MAX FREQUENT START STATION
#freqStart2 <- summaryBy(bike_nr~strt_statn, data = longestRiddenDF,FUN= length)
#freqStart2 <- aggregate(bike_nr~strt_statn, data = longestRiddenDF, FUN =length)
freqStart2 <- data.frame(tapply(longestRiddenDF$hubway_id, longestRiddenDF$strt_statn, length))
View(freqStart2)
stationStart <- longestRiddenDF[which.max(freqStart2),]
stationStart <- which.max(freqStart2)
#OTHER WAYS TO FIND MAX FREQUENT START STATION
#freqStart2 <- summaryBy(bike_nr~strt_statn, data = longestRiddenDF,FUN= length)
#freqStart2 <- aggregate(bike_nr~strt_statn, data = longestRiddenDF, FUN =length)
freqStart2 <- data.frame(tapply(longestRiddenDF$hubway_id, longestRiddenDF$strt_statn, length))
stationStart <- which.max(freqStart2)
#OTHER WAYS TO FIND MAX FREQUENT START STATION
#freqStart2 <- summaryBy(bike_nr~strt_statn, data = longestRiddenDF,FUN= length)
#freqStart2 <- aggregate(bike_nr~strt_statn, data = longestRiddenDF, FUN =length)
freqStart2 <- data.frame(tapply(longestRiddenDF$hubway_id, longestRiddenDF$strt_statn, length))
View(freqStart2)
stationStart <- which.max(freqStart2$tapply.longestRiddenDF.hubway_id..longestRiddenDF.strt_statn..)
stationStart <- longestRiddenDF[which.max(freqStart2$tapply.longestRiddenDF.hubway_id..longestRiddenDF.strt_statn..),]
View(stationStart)
stationStart <- freqStart2[which.max(freqStart2$tapply.longestRiddenDF.hubway_id..longestRiddenDF.strt_statn..),]
stationStart <- longestRiddenDF[which.max(freqStart2$tapply.longestRiddenDF.hubway_id..longestRiddenDF.strt_statn..),]
View(stationStart)
#OTHER WAYS TO FIND MAX FREQUENT START STATION
#freqStart2 <- summaryBy(bike_nr~strt_statn, data = longestRiddenDF,FUN= length)
freqStart2 <- aggregate(bike_nr~strt_statn, data = longestRiddenDF, FUN =length)
View(freqStart2)
stationStart <- longestRiddenDF[which.max(freqStart2$bike_nr),]
View(stationStart)
stationStart <- which.max(freqStart2$bike_nr)
stationStart <- freqStart2[longestRiddenDF$start_statn == which.max(freqStart2$bike_nr),]
View(stationStart)
stationStart <- freqStart2[ which.max(freqStart2$bike_nr),]
View(stationStart)
#freqStart2 <- data.frame(tapply(longestRiddenDF$hubway_id, longestRiddenDF$strt_statn, length))
stationStart <- freqStart2[which.max(freqStart2$tapply.longestRiddenDF.hubway_id..longestRiddenDF.strt_statn..),]
View(stationStart)
#OTHER WAYS TO FIND MAX FREQUENT START STATION
#freqStart2 <- summaryBy(bike_nr~strt_statn, data = longestRiddenDF,FUN= length)
freqStart2 <- aggregate(bike_nr~strt_statn, data = longestRiddenDF, FUN =length)
stationStart <- which.max(freqStart2$tapply.longestRiddenDF.hubway_id..longestRiddenDF.strt_statn..)
#OTHER WAYS TO FIND MAX FREQUENT START STATION
#freqStart2 <- summaryBy(bike_nr~strt_statn, data = longestRiddenDF,FUN= length)
#freqStart2 <- aggregate(bike_nr~strt_statn, data = longestRiddenDF, FUN =length)
freqStart2 <- data.frame(tapply(longestRiddenDF$hubway_id, longestRiddenDF$strt_statn, length))
stationStart <- freqStart2[which.max(freqStart2$tapply.longestRiddenDF.hubway_id..longestRiddenDF.strt_statn..),]
freqStart2 <- data.frame(tapply(longestRiddenDF$hubway_id, longestRiddenDF$strt_statn, length))
stationStart <- freqStart2[which.max(freqStart2$tapply.longestRiddenDF.hubway_id..longestRiddenDF.strt_statn..),]
#stationStart <- freqStart2[which.max(freqStart2$bike_nr),]
#OTHER WAYS TO FIND MAX FREQUENT START STATION
#freqStart2 <- summaryBy(bike_nr~strt_statn, data = longestRiddenDF,FUN= length)
#freqStart2 <- aggregate(bike_nr~strt_statn, data = longestRiddenDF, FUN =length)
freqStart2 <- data.frame(tapply(longestRiddenDF$hubway_id, longestRiddenDF$strt_statn, length))
?apply(array, margin, ...)
##OTHER WAYS TO FIND DURATION
#duration <- aggregate(duration~bike_nr, data= trips, sum)
#duration <- summaryBy(duration~bike_nr,data = trips,FUN= sum )
duration <- data.frame(tapply(trips$duration, trips$bike_nr, sum))
View(duration)
##OTHER WAYS TO FIND DURATION
#duration <- aggregate(duration~bike_nr, data= trips, sum)
#duration <- summaryBy(duration~bike_nr,data = trips,FUN= sum )
duration <- data.frame(tapply(trips$duration, trips$bike_nr, sum))
longestRidden <- duration[which.max(duration[, 'freq']),] #B00585
?setDT
install.packages(data.table)
library(data.table)
install.packages("data.table")
freqEnd2 <- data.frame(tapply(longestRiddenDF$hubway_id,longestRiddenDF$end_statn, length))
library(data.table)
setDT(freqEnd2, keep.rownames = T)[]
freqEnd2 <- setDT(freqEnd2, keep.rownames = T)[]
View(freqEnd2)
mostFreqEnd2 <- freqEnd2[which.max([,2]),]
mostFreqEnd2 <- freqEnd2[which.max(freqEnd2[,2]),]
which.max(freqEnd2[,2])
?which.max
which.max(freqEnd2[,2])
which.max(duration[, 'freq'])
#Lab 4 - Hubway Pt I
#Author: Leila Erbay
###### Section A #############
library(readxl)
stations <- read.csv("hubway_stations.csv")
colNamesStations <- colnames(stations)
# id, terminal, station, municipal, lat, lng, status
uniqueStns <- unique(stations$station)
uniqueStnsAmt <- length(uniqueStns)
#137 unique stations
existingStns <- subset(stations, stations$status == "Existing")
uniqueExistingStns <- unique(existingStns)
uniqueExistStnsAmt <-length(uniqueExistingStns$station)
#130 unique existing stations
############ PART B #######################
trips <- read.csv("hubway_trips.csv")
numCols <- ncol(trips)  #13 Col
numRows <- nrow(trips)  #350615 Row
uniqueZipCodes <- unique(trips$zip_code) #375 Unique Zip Codes
uniqueBikeIDs <- unique(trips$bike_nr) #882 unique bikes
library(plyr)
numRides <- count(trips,"bike_nr")
maxValue <- numRides[which.max(numRides[ ,2 ]),] #B00401
minValue <- numRides[which.min(numRides[,2]),] #T01093
#duration of each bike: need bike, duration
duration <- count(trips, "bike_nr", "duration")
##OTHER WAYS TO FIND DURATION
#duration <- aggregate(duration~bike_nr, data= trips, sum)
#duration <- summaryBy(duration~bike_nr,data = trips,FUN= sum )
#duration <- data.frame(tapply(trips$duration, trips$bike_nr, sum))
which.max(duration[, 'freq'])
longestRidden <- duration[which.max(duration[, 'freq']),] #B00585
shortestRidden <- duration[which.min(duration[, 'freq']),] #T01380
#SPECIFYING BIKE B00585
longestRiddenDF <- trips[trips$bike_nr == "B00585",]
freqEnd <- count(longestRiddenDF, "end_statn")
mostFreqEnd <- freqEnd[freqEnd$freq == max(freqEnd$freq),]
#OTHER WAYS TO FIND MAX FREQUENT END STATION
#freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
#freqEnd2 <- aggregate(bike_nr~end_statn, data = longestRiddenDF, FUN =length)
#TAPPLY:
freqEnd2 <- data.frame(tapply(longestRiddenDF$hubway_id,longestRiddenDF$end_statn, length))
library(data.table)
freqEnd2 <- setDT(freqEnd2, keep.rownames = T)[]
which.max(freqEnd2[,2])
#mostFreqEnd2 <- freqEnd2[which.max(freqEnd2[,2]),]
freqStart <- count(longestRiddenDF, "strt_statn")
mostFreqStart <- freqStart[freqStart$freq == max(freqStart$freq),]
#OTHER WAYS TO FIND MAX FREQUENT START STATION
#freqStart2 <- summaryBy(bike_nr~strt_statn, data = longestRiddenDF,FUN= length)
#freqStart2 <- aggregate(bike_nr~strt_statn, data = longestRiddenDF, FUN =length)
freqStart2 <- data.frame(tapply(longestRiddenDF$hubway_id, longestRiddenDF$strt_statn, length))
#stationStart <- freqStart2[which.max(freqStart2$tapply.longestRiddenDF.hubway_id..longestRiddenDF.strt_statn..),]
#stationStart <- freqStart2[which.max(freqStart2$bike_nr),]
#for bike B00585
mostFreqEndSttn <- stations[stations$id == mostFreqEnd$end_statn,]
mostFreqEndSttn$station #South Station
mostFreqStartSttn <- stations[stations$id == mostFreqStart$strt_statn,]
mostFreqStartSttn$station #South Station
View(longestRidden)
freqEnd2 <- data.frame(tapply(longestRiddenDF$hubway_id,longestRiddenDF$end_statn, length))
library(data.table)
freqEnd2 <- setDT(freqEnd2, keep.rownames = T)[]
#which.max(freqEnd2[,2])
mostFreqEnd2 <- freqEnd2[which.max(freqEnd2[,2]),]
rIndex <- which.max(freqEnd2[,2])
freqEnd2 <- data.frame(tapply(longestRiddenDF$hubway_id,longestRiddenDF$end_statn, length))
View(freqEnd2)
library(data.table)
freqEnd2 <- setDT(freqEnd2, keep.rownames = T)[]
View(freqEnd2)
mostFreqEnd2 <- freqEnd2[which.max(freqEnd2[,2]),]
type(freqEnd2[,2])
class(freqEnd2[,2])
mostFreqEnd2 <- freqEnd2[which.max(as.numeric(freqEnd2[,2])),]
mostFreqEnd2 <- freqEnd2[which.max(as.numeric(unlist(freqEnd2[,2]))),]
View(mostFreqEnd2)
freqEnd2 <- data.frame(tapply(longestRiddenDF$hubway_id,longestRiddenDF$end_statn, length))
View(freqEnd2)
?table
#OTHER WAYS TO FIND MAX FREQUENT END STATION
freqEnd2 <- longestRiddenDR[longestRiddenDF$end_statn]
#SPECIFYING BIKE B00585
longestRiddenDF <- trips[trips$bike_nr == "B00585",]
#OTHER WAYS TO FIND MAX FREQUENT END STATION
freqEnd2 <- longestRiddenDR[longestRiddenDF$end_statn]
#OTHER WAYS TO FIND MAX FREQUENT END STATION
freqEnd2 <- longestRiddenDF[longestRiddenDF$end_statn]
#OTHER WAYS TO FIND MAX FREQUENT END STATION
freqEnd2 <- = longestRiddenDF$end_statn
#OTHER WAYS TO FIND MAX FREQUENT END STATION
freqEnd2 <- = table(longestRiddenDF$end_statn)
#OTHER WAYS TO FIND MAX FREQUENT END STATION
freqEnd2 <-  table(longestRiddenDF$end_statn)
#OTHER WAYS TO FIND MAX FREQUENT END STATION
freqEnd2 <-  table(longestRiddenDF$end_statn)
freqEnd2
freqEnd2[which.max(freqEnd2),]
freqEnd2[,which.max(freqEnd2)]
index <- which.max(freqEnd2)
freqEnd2[index]
mostFreqEnd2 <- freqStart2[which.max(as.numeric(unlist(freqStart2[,2]))),]
freqStart2 <- data.frame(tapply(longestRiddenDF$hubway_id, longestRiddenDF$strt_statn, length))
freqStart2 <- setDT(freqStart2, keep.rownames=T)[]
mostFreqEnd2 <- freqStart2[which.max(as.numeric(unlist(freqStart2[,2]))),]
freqStart2 <- data.frame(tapply(longestRiddenDF$hubway_id, longestRiddenDF$strt_statn, length))
freqStart2 <- setDT(freqStart2, keep.rownames=T)[]
mostFreqStart2 <- freqStart2[which.max(as.numeric(unlist(freqStart2[,2]))),]
#OTHER WAYS TO FIND MAX FREQUENT START STATION
freqStart2 <-as.data.frame(table(longestRiddenDF$strt_statn)))
#OTHER WAYS TO FIND MAX FREQUENT START STATION
freqStart2 <-as.data.frame(table(longestRiddenDF$strt_statn))
mostFreqStart2 <- freqStart2[which.max(freqStart2)]
freqStart2 <-table(longestRiddenDF$strt_statn)
mostFreqStart2 <- freqStart2[which.max(freqStart2)]
#Lab 4 - Hubway Pt I
#Author: Leila Erbay
###### Section A #############
library(readxl)
stations <- read.csv("hubway_stations.csv")
colNamesStations <- colnames(stations)
# id, terminal, station, municipal, lat, lng, status
uniqueStns <- unique(stations$station)
uniqueStnsAmt <- length(uniqueStns)
#137 unique stations
existingStns <- subset(stations, stations$status == "Existing")
uniqueExistingStns <- unique(existingStns)
uniqueExistStnsAmt <-length(uniqueExistingStns$station)
#130 unique existing stations
############ PART B #######################
trips <- read.csv("hubway_trips.csv")
numCols <- ncol(trips)  #13 Col
numRows <- nrow(trips)  #350615 Row
uniqueZipCodes <- unique(trips$zip_code) #375 Unique Zip Codes
uniqueBikeIDs <- unique(trips$bike_nr) #882 unique bikes
library(plyr)
numRides <- count(trips,"bike_nr")
maxValue <- numRides[which.max(numRides[ ,2 ]),] #B00401
minValue <- numRides[which.min(numRides[,2]),] #T01093
#duration of each bike: need bike, duration
duration <- count(trips, "bike_nr", "duration")
##OTHER WAYS TO FIND DURATION
#duration <- aggregate(duration~bike_nr, data= trips, sum)
#duration <- summaryBy(duration~bike_nr,data = trips,FUN= sum )
#duration <- data.frame(tapply(trips$duration, trips$bike_nr, sum))
longestRidden <- duration[which.max(duration[, 'freq']),] #B00585
shortestRidden <- duration[which.min(duration[, 'freq']),] #T01380
#SPECIFYING BIKE B00585
longestRiddenDF <- trips[trips$bike_nr == "B00585",]
freqEnd <- count(longestRiddenDF, "end_statn")
mostFreqEnd <- freqEnd[freqEnd$freq == max(freqEnd$freq),]
#OTHER WAYS TO FIND MAX FREQUENT END STATION
# freqEnd2 <-  table(longestRiddenDF$end_statn)
# index <- which.max(freqEnd2)
# freqEnd2[index]
#freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
#freqEnd2 <- aggregate(bike_nr~end_statn, data = longestRiddenDF, FUN =length)
#TAPPLY:
# freqEnd2 <- data.frame(tapply(longestRiddenDF$hubway_id,longestRiddenDF$end_statn, length))
# library(data.table)
# freqEnd2 <- setDT(freqEnd2, keep.rownames = T)[]
# mostFreqEnd2 <- freqEnd2[which.max(as.numeric(unlist(freqEnd2[,2]))),]
freqStart <- count(longestRiddenDF, "strt_statn")
mostFreqStart <- freqStart[freqStart$freq == max(freqStart$freq),]
#OTHER WAYS TO FIND MAX FREQUENT START STATION
# freqStart2 <-table(longestRiddenDF$strt_statn)
# mostFreqStart2 <- freqStart2[which.max(freqStart2)]
#freqStart2 <- summaryBy(bike_nr~strt_statn, data = longestRiddenDF,FUN= length)
#freqStart2 <- aggregate(bike_nr~strt_statn, data = longestRiddenDF, FUN =length)
#TAPPLY:
# freqStart2 <- data.frame(tapply(longestRiddenDF$hubway_id, longestRiddenDF$strt_statn, length))
# freqStart2 <- setDT(freqStart2, keep.rownames=T)[]
# mostFreqStart2 <- freqStart2[which.max(as.numeric(unlist(freqStart2[,2]))),]
#stationStart <- freqStart2[which.max(freqStart2$tapply.longestRiddenDF.hubway_id..longestRiddenDF.strt_statn..),]
#stationStart <- freqStart2[which.max(freqStart2$bike_nr),]
#for bike B00585
mostFreqEndSttn <- stations[stations$id == mostFreqEnd$end_statn,]
mostFreqEndSttn$station #South Station
mostFreqStartSttn <- stations[stations$id == mostFreqStart$strt_statn,]
mostFreqStartSttn$station #South Station
freqEnd <- count(longestRiddenDF, "end_statn")
mostFreqEnd <- freqEnd[freqEnd$freq == max(freqEnd$freq),]
View(freqEnd)
View(mostFreqEnd)
numRides <- count(trips,"bike_nr")
View(numRides)
View(mostFreqStartSttn)
#Lab 4 - Hubway Pt I
#Author: Leila Erbay
###### PART A #############
library(readxl)
stations <- read.csv("hubway_stations.csv")
colNamesStations <- colnames(stations)
# id, terminal, station, municipal, lat, lng, status
uniqueStns <- unique(stations$station)
uniqueStnsAmt <- length(uniqueStns)
#137 unique stations
existingStns <- subset(stations, stations$status == "Existing")
uniqueExistingStns <- unique(existingStns)
uniqueExistStnsAmt <-length(uniqueExistingStns$station)
#130 unique existing stations
############ PART B #######################
trips <- read.csv("hubway_trips.csv")
numCols <- ncol(trips)  #13 Col
numRows <- nrow(trips)  #350615 Row
uniqueZipCodes <- unique(trips$zip_code) #375 Unique Zip Codes
uniqueBikeIDs <- unique(trips$bike_nr) #882 unique bikes
library(plyr)
numRides <- count(trips,"bike_nr")
maxValue <- numRides[which.max(numRides[ ,2 ]),] #B00401
minValue <- numRides[which.min(numRides[,2]),] #T01093
#duration of each bike: need bike, duration
duration <- count(trips, "bike_nr", "duration")
##OTHER WAYS TO FIND DURATION
#duration <- aggregate(duration~bike_nr, data= trips, sum)
#duration <- summaryBy(duration~bike_nr,data = trips,FUN= sum )
#duration <- data.frame(tapply(trips$duration, trips$bike_nr, sum))
longestRidden <- duration[which.max(duration[, 'freq']),] #B00585
shortestRidden <- duration[which.min(duration[, 'freq']),] #T01380
#SPECIFYING BIKE B00585
longestRiddenDF <- trips[trips$bike_nr == "B00585",]
freqEnd <- count(longestRiddenDF, "end_statn")
mostFreqEnd <- freqEnd[freqEnd$freq == max(freqEnd$freq),]
#OTHER WAYS TO FIND MAX FREQUENT END STATION
# freqEnd2 <-  table(longestRiddenDF$end_statn)
# index <- which.max(freqEnd2)
# freqEnd2[index]
#freqEnd2 <- summaryBy(bike_nr~end_statn, data = longestRiddenDF,FUN= length)
#freqEnd2 <- aggregate(bike_nr~end_statn, data = longestRiddenDF, FUN =length)
#TAPPLY:
# freqEnd2 <- data.frame(tapply(longestRiddenDF$hubway_id,longestRiddenDF$end_statn, length))
# library(data.table)
# freqEnd2 <- setDT(freqEnd2, keep.rownames = T)[]
# mostFreqEnd2 <- freqEnd2[which.max(as.numeric(unlist(freqEnd2[,2]))),]
freqStart <- count(longestRiddenDF, "strt_statn")
mostFreqStart <- freqStart[freqStart$freq == max(freqStart$freq),]
class(mostFreqStar)
#OTHER WAYS TO FIND MAX FREQUENT START STATION
# freqStart2 <-table(longestRiddenDF$strt_statn)
# mostFreqStart2 <- freqStart2[which.max(freqStart2)]
#freqStart2 <- summaryBy(bike_nr~strt_statn, data = longestRiddenDF,FUN= length)
#freqStart2 <- aggregate(bike_nr~strt_statn, data = longestRiddenDF, FUN =length)
#TAPPLY:
# freqStart2 <- data.frame(tapply(longestRiddenDF$hubway_id, longestRiddenDF$strt_statn, length))
# freqStart2 <- setDT(freqStart2, keep.rownames=T)[]
# mostFreqStart2 <- freqStart2[which.max(as.numeric(unlist(freqStart2[,2]))),]
#stationStart <- freqStart2[which.max(freqStart2$tapply.longestRiddenDF.hubway_id..longestRiddenDF.strt_statn..),]
#stationStart <- freqStart2[which.max(freqStart2$bike_nr),]
#for bike B00585
mostFreqEndSttn <- stations[stations$id == mostFreqEnd$end_statn,]
mostFreqEndSttn$station #South Station
mostFreqStartSttn <- stations[stations$id == mostFreqStart$strt_statn,]
mostFreqStartSttn$station #South Station
source('~/Desktop/LevelNeu2018/Labs/Lab4/20170628_LeilaErbay_Lab4.R', echo=TRUE)
