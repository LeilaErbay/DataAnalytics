source('~/.active-rstudio-document')
source('~/Untitled.R')
c<-1
(-b + sqrt(b^2 - 4*a*c))/(2*a)
(-b - sqrt(b^2 - 4*a*c))/(2*a)
source('~/Untitled.R', echo=TRUE)
x
library(dslabs)
data("murders")
data(murders)
class(murders)
View(murders)
str(murders)
murders $population
library(dslabs)
data(murders)
sort(murders)
data(total)
sort(total)
sort(murders,total)
library(slabs)
sort(murders$total)
index <- order(murders$total)
murders$abb[index]
kaggle competitions download -c titanic
kaggle competitions download -c titanic
library("ggplot2")
library('ggthemes')
library("ggthemes")
library("scales")
library("dplyr")
library("mice")
library("randomForest")
library('scales')
library("ggthemes")
library("ggplot2-ggthemes")
library("ggtheme")
install.packages("ggthemes")
install.packages("scales")
install.packages("scales")
install.packages('ggplot2')
install.packages("ggplot2")
install.packages("dplyr")
install.packages("mice")
install.packages("randomForest")
library('ggplot2')
library("ggthemes")
library("scales")
library("dplyr")
library("mice")
library("randomForest")
train <- read.csv('../input/train.csv', stringsAsFactors = F)
test  <- read.csv('../input/test.csv', stringsAsFactors = F)
kaggle competitions download -c titanic
kaggle competitions download -c titanic
?plot
source('~/Desktop/LevelNeu2018/R-Scripts/intro.R')
x<- 2
y <-3
x = y
x <- y
plot(c(0, 1), c(0, 1), type = "p")
library("boot", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:boot", unload=TRUE)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:ggplot2", unload=TRUE)
install.packages(readxl)
install.packages("readxl")
browseVignettes("ggplot2")
"8isthebest" + 2
"8" + 2
"8" +2
8
typeof(8)
typeof(8L)
typeof(8.0L)
typeof(8.0)
typeof(8L)
as.integer("8")
typeof(8)
as.integer("8isthebest" + 2)
typeof(as.integer("8"))
getwd()
setwd("./Desktop/LevelNeu2018/Labs/Lab3")
getwd()
install.packages("readxl")
library(readxl)
pkmn <- read_excel("pokemon.xlsx", sheetIndex = 1)
pkmn <- read_excel("pokemon.xlsx", 1)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
install.packages("readxl")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Desktop/LevelNeu2018/Labs/Lab3/Pokemon.R')
source('~/Desktop/LevelNeu2018/Labs/Lab3/Pokemon.R')
source('~/Desktop/LevelNeu2018/Labs/Lab3/Pokemon.R')
source('~/Desktop/LevelNeu2018/Labs/Lab3/Pokemon.R')
source('~/Desktop/LevelNeu2018/Labs/Lab3/Pokemon.R')
source('~/Desktop/LevelNeu2018/Labs/Lab3/Pokemon.R')
source('~/Desktop/LevelNeu2018/Labs/Lab3/Pokemon.R')
source('~/Desktop/LevelNeu2018/Labs/Lab3/Pokemon.R')
source('~/Desktop/LevelNeu2018/Labs/Lab3/Pokemon.R')
source('~/Desktop/LevelNeu2018/Labs/Lab3/Pokemon.R')
source('~/Desktop/LevelNeu2018/Labs/Lab3/Pokemon.R')
source('~/Desktop/LevelNeu2018/Labs/Lab3/Pokemon.R')
getwd()
setwd("/Users/LeilaErbay/Desktop/LevelNeu2018/Labs/Lab3")
#pkmn : var pointing to the xl file
pkmn <- read_excel("../pokemon.xslx", 1)
#pkmn : var pointing to the xl file
pkmn <- read_excel("pokemon.xslx", 1)
#pkmn : var pointing to the xl file
pkmn <- read_excel("pokemon.xlsx", 1)
source('~/Desktop/LevelNeu2018/Labs/Lab3/Pokemon.R')
source('~/Desktop/LevelNeu2018/Labs/Lab3/Pokemon.R')
head(pkmn)
source('~/Desktop/LevelNeu2018/Labs/Lab3/Pokemon.R')
duplicated(pkmn$Name)
pkmn$pkmn_dupes <- duplicated(pkmn$Name)
head(pkmn)
#filtering out duplicates: if duplicated == false leave it in pkmn
pkmn <- pkmn[pkmn$pkmn_dupes == "FALSE"]
#filtering out duplicates: if duplicated == false leave it in pkmn
pkmn <- pkmn[pkmn$pkmn_dupes == "FALSE",]
#make table of Type of Pokemon
table(pkmn$Type)
source('~/Desktop/LevelNeu2018/Labs/Lab3/Pokemon.R')
#show median, min, max, first and third quartiles
summary(pkmn$Attack)
#first 6 of the highest attack fxn
highattack[1:6,]
#6 highest attack Pokemon
#order attack col by descending
#order (-attribute) = descending
#order (attribute) = ascending
highattack <- pkmn[order(-pkmn$Attack),]
head(highattack)
head(highattack[1:6,])  #better view of 6 poken with the highest attack
head(highattack[1:8,])  #better view of 6 poken with the highest attack
highattack[1:8,3]  #better view of 6 poken with the highest attack
highattack[1:8, pkmn$Type]  #better view of 6 poken with the highest attack
#better view of 6 poken with the highest attack
head(highattack)  #better view of 6 poken with the highest attack
pkmn$Type
#High Attack Psychic Pokemon
highattackpsychic <- pkmn[order(-pkmn$Attack),][1:6,]
# psychic <- pkm
#
# psychic <- pkmn[pkmn$Type == "PSYCHIC",]
#
# psychic <- pkmn[pkmn$Type == "PSYCHIC",]
#
#Do we need to explicitly install the package in the R script?
#install.packages("readxl")
library(readxl)       # load readxl
source('~/Desktop/LevelNeu2018/Labs/Lab3/Pokemon.R')
source('~/Desktop/LevelNeu2018/Labs/Lab3/Pokemon.R')
source('~/Desktop/LevelNeu2018/Labs/Lab3/Pokemon.R')
highAttack
highAttack <-pkmn[order(-pkmn$Attack),][1:2,]
highDefense <- pkmn[order(-pkmn$Defense),][1:2,]
highSpeed <- pkmn[order(-pkmn$Speed),][1:2,]
topPkmn <- rbind(highAttack, highDefense, highSpeed)
topPkmn
View(pkmn)
View(highAttack)
View(topPkmn)
#Lab3 - Pokemon
#Author: Leila Erbay
#Purpose: Practice R basics
#Do we need to explicitly install the package in the R script?
#install.packages("readxl")
library(readxl)       # load readxl
setwd("/Users/LeilaErbay/Desktop/LevelNeu2018/Labs/Lab3")
#pkmn : var pointing to the xl file
pkmn <- read_excel("pokemon.xlsx", 1)
head(pkmn)
tail(pkmn)
duplicated(pkmn$Name)   #finding duplicated name
pkmn$pkmn_dupes <- duplicated(pkmn$Name)  #assigning pkmn_dupes as logical of duplicated Names
head(pkmn)
#filtering out duplicates: if duplicated == false leave it in pkmn
pkmn <- pkmn[pkmn$pkmn_dupes == "FALSE",]
#make table of Type of Pokemon
table(pkmn$Type)
#show median, min, max, first and third quartiles
summary(pkmn$Attack)
#if pkmn type == poison, give the attack summary on poisonous pokemon
summary(pkmn[pkmn$Type == "POISON",]$Attack)
#6 highest attack Pokemon
#order attack col by descending
#order (-attribute) = descending
#order (attribute) = ascending
highAttack <- pkmn[order(-pkmn$Attack),]
highAttack
#first 6 of the highest attack fxn
highAttack[1:6,]
head(highAttack)  #better view of 6 poken with the highest attack
#first 6 with highest attack in 1 line:
highAttack <- pkmn[order(-pkmn$Attack),][1:6,]
head(highAttack)
#Pokemon with highest attack (Names):
#1 Mega Mewtwo X
#2 Mega Heracross
#3 Deoxys- Attack
#4 Mega Garchomp
#5 Black Kyurem
#6 Mega Banette
highAttack <-pkmn[order(-pkmn$Attack),][1:2,]
#Top 2 High Attack
#1 Mega Mewtwo X
#2 Mega Heracross
highDefense <- pkmn[order(-pkmn$Defense),][1:2,]
# Top 2 High Defense
#1 Shuckle
#2 Mega Aggron
highSpeed <- pkmn[order(-pkmn$Speed),][1:2,]
#Top 2 High Speed
#1 Deoxys - Speed Forme
#2 Ninjask
topPkmn <- rbind(highAttack, highDefense, highSpeed)
topPkmn
#1 Overall Pokemon based on Attack, Speed, Defense: Mega Mewtwo X
#psychic pokemon
psychic <- pkmn[pkmn$Type == "PSYCHIC",]
highAttackPsychic <- pkmn[order(-pkmn$Attack),][1:2,]
#Top 2 Psychic with high attack
#1
#2
highDefensePsyhic <- pkmn[order(-pkmn$Defense),][1:2,]
# Top 2 Psychic based on defense
#1
#2
highSpeedPsychic <- pkmn[order(-pkmn$Speed),][1:2,]
# Top 2 Psychic based on Speed
#1
#2
topPsychic <- rbind(highAttackPsychic, highDefensePsychic, highSpeedPsychic)
#Lab3 - Pokemon
#Author: Leila Erbay
#Purpose: Practice R basics
#Do we need to explicitly install the package in the R script?
#install.packages("readxl")
library(readxl)       # load readxl
setwd("/Users/LeilaErbay/Desktop/LevelNeu2018/Labs/Lab3")
#pkmn : var pointing to the xl file
pkmn <- read_excel("pokemon.xlsx", 1)
head(pkmn)
tail(pkmn)
duplicated(pkmn$Name)   #finding duplicated name
pkmn$pkmn_dupes <- duplicated(pkmn$Name)  #assigning pkmn_dupes as logical of duplicated Names
head(pkmn)
#filtering out duplicates: if duplicated == false leave it in pkmn
pkmn <- pkmn[pkmn$pkmn_dupes == "FALSE",]
#make table of Type of Pokemon
table(pkmn$Type)
#show median, min, max, first and third quartiles
summary(pkmn$Attack)
#if pkmn type == poison, give the attack summary on poisonous pokemon
summary(pkmn[pkmn$Type == "POISON",]$Attack)
#6 highest attack Pokemon
#order attack col by descending
#order (-attribute) = descending
#order (attribute) = ascending
highAttack <- pkmn[order(-pkmn$Attack),]
highAttack
#first 6 of the highest attack fxn
highAttack[1:6,]
head(highAttack)  #better view of 6 poken with the highest attack
#first 6 with highest attack in 1 line:
highAttack <- pkmn[order(-pkmn$Attack),][1:6,]
head(highAttack)
#Pokemon with highest attack (Names):
#1 Mega Mewtwo X
#2 Mega Heracross
#3 Deoxys- Attack
#4 Mega Garchomp
#5 Black Kyurem
#6 Mega Banette
highAttack <-pkmn[order(-pkmn$Attack),][1:2,]
#Top 2 High Attack
#1 Mega Mewtwo X
#2 Mega Heracross
highDefense <- pkmn[order(-pkmn$Defense),][1:2,]
# Top 2 High Defense
#1 Shuckle
#2 Mega Aggron
highSpeed <- pkmn[order(-pkmn$Speed),][1:2,]
#Top 2 High Speed
#1 Deoxys - Speed Forme
#2 Ninjask
topPkmn <- rbind(highAttack, highDefense, highSpeed)
topPkmn
#1 Overall Pokemon based on Attack, Speed, Defense: Mega Mewtwo X
#psychic pokemon
psychic <- pkmn[pkmn$Type == "PSYCHIC",]
highAttackPsychic <- pkmn[order(-pkmn$Attack),][1:2,]
#Top 2 Psychic with high attack
#1
#2
highDefensePsychic <- pkmn[order(-pkmn$Defense),][1:2,]
# Top 2 Psychic based on defense
#1
#2
highSpeedPsychic <- pkmn[order(-pkmn$Speed),][1:2,]
# Top 2 Psychic based on Speed
#1
#2
topPsychic <- rbind(highAttackPsychic, highDefensePsychic, highSpeedPsychic)
View(highattack)
View(highDefensePsychic)
View(highSpeedPsychic)
# Top 2 Psychic based on Speed
#1 Deoxys - Speed Forme
#2 Ninjask
topPsychic <- rbind(highAttackPsychic, highDefensePsychic, highSpeedPsychic)
View(topPsychic)
View(pkmn)
slow <- pkmn[order(pkmn$Speed),][1:6,]
slow
View(slow)
#worst pokemon: lowest Total
worst <- pkmn[order(pkmn$Total),][1,]
worst
worstPkmn
worstPkmn <- min(pkmn$Total)
worstPkmn <- pkmn[min(pkmn$Total),]
View(worstPkmn)
View(worst)
worstPkmn <- pkmn[min(pkmn$Total)]
worstPkmn <- pkmn[min(pkmn$Total),]
View(worstPkmn)
worstPkmn <- min(pkmn$Total)
worstPkmn <- pkmn$Name[min(pkmn$Total)]
View(worst)
worstPkmn <- min(pkmn$Total)[pkmn$Name]
worstPkmn <- min(pkmn[1,pkmn$Total])
worstPkmn <- min(pkmn$Total)
worstPkmn <- pkmn[pkmn$Total== min(pkmn$Total),]
worstPkmn <- pkmn[pkmn$Total== min(pkmn$Total),]
worstPkmn
worstPkmn <- pkmn[pkmn$Total== min(pkmn$Total),]
#worst pokemon: lowest Total using order function
worst <- pkmn[order(pkmn$Total),][1,]
#worst pokemon: lowest Total using order function
worst <- pkmn[order(pkmn$Total),][1,]
worst
worstPkmn <- pkmn[pkmn$Total== min(pkmn$Total),]
worstPkmn
medPkmn
medPkmn <- pkmn[pkmn$Total == median(pkmn$Total),]
View(medPkmn)
#Ideal Pokemon Lineup
bestAttack <- pkmn[order(-pkmn$Attack),][1,]
bestSpecAttack <- pkmn[pkmn$`Special Attack` == max(pkmn$`Special Attack`),][1,]
bestSpeed <- highSpeed
medAllAround <- medPkmn
View(bestAttack)
View(bestSpecAttack)
#Ideal Pokemon Lineup
bestAttack <- pkmn[order(-pkmn$Attack),][1,]
#Ideal Pokemon Lineup
bestAttack <- pkmn[order(-pkmn$Attack),][1,]
View(bestSpeed)
bestTotal <- pkmn[pkmn$Total == max(pkmn$Total),][1,]
View(bestTotal)
View(medAllAround)
getwd()
setwd("/Users/LeilaErbay/Desktop/LevelNeu2018/Labs/Lab3")
library(readxl)
pkmn2 <- read_excel("pokemon.xlsx", 2)
pkmn3 <- read_excel("pokemon.xlsx", 3)
pkmn4 <- read_excel("pokemon.xlsx", 4)
View(medPkmn)
View(pkmn2)
View(pkmn2)
View(pkmn3)
View(pkmn3)
View(pkmn3)
View(pkmn4)
View(pkmn4)
View(pkmn)
View(pkmn)
bestMove <- pkmn2[order(-pkmn2$PP),][1:6,]
View(bestMove)
highestLevels <-pkmn2[order(-pkmn3$Level),][1:12,]
View(highestLevels)
highestLevels <-pkmn3[order(-pkmn3$Level),][1:12,]
highestLevels <-pkmn3[order(-pkmn3$Level),][1:12,]
mostEffective <- pkmn4[pkmn4$Effectiveness,][1:12,]
View(mostEffective)
mostEffective <- pkmn4[pkmn4$Effectiveness=="Super Effective",][1:12,]
View(mostEffective)
type1 <- pkmn[pkmn$Name == "Zweilous",][1,]
View(type1)
type2 <- pkmn[pkmn$Name == "Larvesta",][1,]
View(type2)
type3 <- pkmn[pkmn$Name == "Dragonair",][1,]
View(type3)
type4 <- pkmn[pkmn$Name == "Pupitar",][1,]
View(type4)
type5 <- pkmn[pkmn$Name == "Sligoo",][1,] #type5 =
ty
type5 <- pkmn[pkmn$Name == "Sligoo",][1,] #type5 =
type6 <-pkmn[pkmn$Name == "Rufflet",][1,] #type6 =
View(type5)
View(type6)
type5 <- pkmn[pkmn$Name == "Vullaby",][1,] #type5 =
View(type5)
View(type1)
?table
?data.frame
#Team: Zweilous, Larvesta, Dragonair, Pupitar, Vullaby, Rufflet
total <- data.frame(type1, type2, type3, type4 )
View(total)
#Team: Zweilous, Larvesta, Dragonair, Pupitar, Vullaby, Rufflet
team <- data.frame(c(type1), c(type2), c(type3), c(type4), c(type5), c(type6) )
View(team)
#Team: Zweilous, Larvesta, Dragonair, Pupitar, Vullaby, Rufflet
team <- c(c(type1), c(type2), c(type3), c(type4), c(type5), c(type6) )
View(team)
#Team: Zweilous, Larvesta, Dragonair, Pupitar, Vullaby, Rufflet
team <- rbind(type1, type2, type3, type4, type5, type6 )
View(team)
sumTotal <- sum(pkmn$Total)
sumTotal <- sum(team$Total)
highestLevelRock <- pkmn2[order(-pkmn2$Level),][1,]
highestLevelRock <- pkmn3[order(-pkmn3$Level),][1,]
View(highestLevelRock)
highestLevelRock <- pkmn3[order(-pkmn3$Level) & pkmn2$Type == "Rock",][1,]
View(highestLevelRock)
highestLevelRock <- pkmn3[order(-pkmn3$Level) & pkmn2$Type == "Rock",][10,]
View(highestLevelRock)
highestLevelRock <- pkmn[order(-pkmn3$Level) & pkmn2$Type == "Rock",][10,]
View(highestLevelRock)
pkmn3$type <- pkmn2$Type
rocks <- pkmn[pkmn$Name == highestLevels & pkmn$Type == "Rock",][1,]
source('~/Desktop/LevelNeu2018/Labs/Lab3/PokemonChallenge.R', echo=TRUE)
View(rocks)
rocks <- data.frame(pkmn[pkmn$Name == highestLevels$`Evolving from` & pkmn$Type == "Rock",][1,])
View(rocks)
rocks <- pkmn [pkmn$Type == "Rock",][,]
rocks <- pkmn [pkmn$Type == "Rock",][,]
View(rocks)
ghost <- pkmn[pkmn$Type == "Ghost",][,]
View(ghost)
ghost <- pkmn[pkmn$Type == "GHOST",][,]
rocks <- pkmn [pkmn$Type == "ROCK",][,] #DNE
ghost <- pkmn[pkmn$Type == "GHOST",][,]
View(rocks)
rock <- data.frame(highestLevels$`Evolving from` %in% rocks$Name)
View(rock)
ghost <- data.frame(highestLevels$`Evolving from` %in% ghosts$Name) #
#Lab3 - Challenge (Optional)
setwd("/Users/LeilaErbay/Desktop/LevelNeu2018/Labs/Lab3")
library(readxl)
pkmn2 <- read_excel("pokemon.xlsx", 2)
pkmn3 <- read_excel("pokemon.xlsx", 3)
pkmn4 <- read_excel("pokemon.xlsx", 4)
########### CHALLENGE PART 1  #########################
bestMove <- pkmn2[order(-pkmn2$PP),][1:12,]
highestLevels <-pkmn3[order(-pkmn3$Level),][,]
mostEffective <- pkmn4[pkmn4$Effectiveness=="Super Effective",][1:12,]
#with greater level is more power thus prioritize:
# Level
# Type (Diversify)
# Effectiveness
type1 <- pkmn[pkmn$Name == "Zweilous",][1,] #type1 = DARK
type2 <- pkmn[pkmn$Name == "Larvesta",][1,] #type2 = BUG
type3 <- pkmn[pkmn$Name == "Dragonair",][1,] #type3 = DRAGON
type4 <- pkmn[pkmn$Name == "Pupitar",][1,]   #type4 = ROCK
type5 <- pkmn[pkmn$Name == "Vullaby",][1,] #type5 = DARK
type6 <-pkmn[pkmn$Name == "Rufflet",][1,] #type6 = NORMAL
#Team: Zweilous, Larvesta, Dragonair, Pupitar, Vullaby, Rufflet
team <- rbind(type1, type2, type3, type4, type5, type6 )
sumTotal <- sum(team$Total)   # total = 2330, team works
################ CHALLENGE PART 2 ##########################
#Best Choices:
# https://www.eurogamer.net/articles/2018-01-15-pokemon-go-type-chart-effectiveness-weaknesses
# Rock, Ghost, Ice, Dragon, Fairy, Dark
#COLLECTING ALL PKMNs of a certain Type
rocks <- pkmn [pkmn$Type == "ROCK",][,]
ghosts <- pkmn[pkmn$Type == "GHOST",][,]
ices <- pkmn[pkmn$Type == "ICE",][,]
dragons <-pkmn[pkmn$Type == "DRAGON",][,]
fairys <- pkmn[pkmn$Type == "FAIRY",][,]
darks <- pkmn[pkmn$Type == "DARK",][,]
#Finding the highest level of each type inside rocks
rock <- data.frame(highestLevels$`Evolving from` %in% rocks$Name) #Pupitar
ghost <- data.frame(highestLevels$`Evolving from` %in% ghosts$Name) #
ice <- data.frame(highestLevels$`Evolving from` %in% ices$Name)
dragon <- data.frame(highestLevels$`Evolving from` %in% dragons$Name)
fairy <- data.frame(highestLevels$`Evolving from` %in% fairys$Name)
dark <- data.frame(highestLevels$`Evolving from` %in% dark$Name)
source('~/Desktop/LevelNeu2018/Labs/Lab3/PokemonChallenge.R', echo=TRUE)
View(dragon)
ice <- data.frame(highestLevels$`Evolving from` %in% ices$Name) #
View(ice)
dragon <- data.frame(highestLevels$`Evolving from` %in% dragons$Name) #
View(dragon)
rock <- data.frame(highestLevels$`Evolving from` %in% rocks$Name) #Pupitar, #4 in Levels
ghost <- data.frame(highestLevels$`Evolving from` %in% ghosts$Name) #Dragonair, #3 in Levels
ice <- data.frame(highestLevels$`Evolving from` %in% ices$Name) #Vanillish  #18 in Level
dragon <- data.frame(highestLevels$`Evolving from` %in% dragons$Name) #
fairy <- data.frame(highestLevels$`Evolving from` %in% fairys$Name)
dark <- data.frame(highestLevels$`Evolving from` %in% darks$Name)
View(rock)
View(ghost)
View(fairy)
View(dark)
