install.packages(swirl)
install.packages("swirl")
source('~/.active-rstudio-document', echo=TRUE)
print(add(1,2))
print(add(1,2))
print(add(1,2))
print(add(10,20))
source('~/.active-rstudio-document', echo=TRUE)
print(add(1,2))
print(add(10,20))
source('~/.active-rstudio-document', echo=TRUE)
variable
source('~/.active-rstudio-document', echo=TRUE)
vector1
source('~/.active-rstudio-document', echo=TRUE)
vector2
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
19.71*1.15
install.packages("dslabs")
library(dslabs)
a<-1
b <-1, c<-1
b <-1
c <-1
a
print(a)
ls()
vector1
x
n
ls
source('~/.active-rstudio-document')
source('~/Untitled.R')
c<-1
(-b + sqrt(b^2 - 4*a*c))/(2*a)
(-b - sqrt(b^2 - 4*a*c))/(2*a)
source('~/Untitled.R', echo=TRUE)
x
library(dslabs)
data("murders")
data(murders)
class(murders)
View(murders)
str(murders)
murders $population
library(dslabs)
data(murders)
sort(murders)
data(total)
sort(total)
sort(murders,total)
library(slabs)
sort(murders$total)
index <- order(murders$total)
murders$abb[index]
kaggle competitions download -c titanic
kaggle competitions download -c titanic
library("ggplot2")
library('ggthemes')
library("ggthemes")
library("scales")
library("dplyr")
library("mice")
library("randomForest")
library('scales')
library("ggthemes")
library("ggplot2-ggthemes")
library("ggtheme")
install.packages("ggthemes")
install.packages("scales")
install.packages("scales")
install.packages('ggplot2')
install.packages("ggplot2")
install.packages("dplyr")
install.packages("mice")
install.packages("randomForest")
library('ggplot2')
library("ggthemes")
library("scales")
library("dplyr")
library("mice")
library("randomForest")
train <- read.csv('../input/train.csv', stringsAsFactors = F)
test  <- read.csv('../input/test.csv', stringsAsFactors = F)
kaggle competitions download -c titanic
kaggle competitions download -c titanic
?plot
source('~/Desktop/LevelNeu2018/R-Scripts/intro.R')
x<- 2
y <-3
x = y
x <- y
plot(c(0, 1), c(0, 1), type = "p")
library("boot", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:boot", unload=TRUE)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:ggplot2", unload=TRUE)
install.packages(readxl)
install.packages("readxl")
browseVignettes("ggplot2")
"8isthebest" + 2
"8" + 2
"8" +2
8
typeof(8)
typeof(8L)
typeof(8.0L)
typeof(8.0)
typeof(8L)
as.integer("8")
typeof(8)
as.integer("8isthebest" + 2)
typeof(as.integer("8"))
?hist
?qqplot
qqplot(murders)
?plot
?ggplot
library(ggplot2)
?ggplot2
install.packages("grDevices")
install.packages("grDevices")
?tible
??tible
?read_excel
?readxl
?class
?typeof
which.max
?which.max
?sample
?set.seed
.Random.seed?
?.Random.seed
?binomial
?rbinom
trials <- numeric(length = 100)
#sum(rbinom(20,20, 0.618))
for(i in seq_along(trials)){
trials[i] <- sum(rbinom(1,20, 0.618))
}
trials <- numeric(length = 100)
#sum(rbinom(20,20, 0.618))
for(i in seq_along(trials)){
trials[i] <- sum(rbinom(1,20, 0.618))
}
hist(trials)
?binom?
?binom
?binom
trials <- numeric(length = 100)
#sum(rbinom(20,20, 0.618))
for(i in seq_along(trials)){
trials[i] <- sum(rbinom(20,1, 0.618))
}
hist(trials)
#
hist(rbinom(20,100, 0.618))
#
hist(sum(rbinom(20,100, 0.618)))
#
hist(rbinom(20,100, 0.618))
trials <- numeric(length = 100)
#sum(rbinom(20,20, 0.618))
for(i in seq_along(trials)){
trials[i] <- sum(rbinom(20,1, 0.618))
}
hist(trials)
mean(trials)
trials <- numeric(length = 1000)
#sum(rbinom(20,20, 0.618))
for(i in seq_along(trials)){
trials[i] <- sum(rbinom(20,1, 0.618))
}
mean(trials)
hist(trials)
trials <- numeric(length = 100)
#sum(rbinom(20,20, 0.618))
for(i in seq_along(trials)){
trials[i] <- sum(rbinom(20,1, 0.618))
}
mean(trials)
hist(trials)
var(trials)
trialsOt <- numeric(length=100)
for(i in seq_along(trialsOt)){
trialsOt[i] <- sum(rbinom(15,1,.414))
}
mean(trialsOt)
var(trialsOt)
meanW <- 3*meanOt + 2*meanOb + 10
varW <- 9*varOt + 4*varOb + 100
#p = 0.618
#n = 20
#size = 20
#
hist(rbinom(20,100, 0.618))
trials <- numeric(length = 100)
#sum(rbinom(20,20, 0.618))
for(i in seq_along(trials)){
trials[i] <- sum(rbinom(20,1, 0.618))
}
meanOb <-mean(trials)
varOb <-var(trials)
hist(trials)
#
trialsOt <- numeric(length=100)
for(i in seq_along(trialsOt)){
trialsOt[i] <- sum(rbinom(15,1,.414))
}
meanOt <-mean(trialsOt)
varOt <-var(trialsOt)
meanW <- 3*meanOb + 2*meanOt + 10
varW <- 9*varOb + 4*varOt + 100
varW <- 9*varOb + 4*varOt
n <- 1:15
ifelse(n %% 3 ==0 , "divisible by 3", "not divisible by 3")
df <- c(n,NULL)
df <- as.data.frame(c(n,NULL))
View(df)
df <- as.data.frame(c(n,result))
n <- 1:15
result <- NULL
df <- as.data.frame(c(n,result))
df <- as.data.frame(n)
View(df)
df <- cbind(NULL)
df <- cbind(result)
df <- as.data.frame(n)
df <- cbind(result)
df <- cbind(result)
result <- NA
df <- as.data.frame(n)
df <- cbind(result)
View(df)
df <- as.data.frame(n)
result <-ifelse(n %% 3 ==0 , "divisible by 3", "not divisible by 3")
df <- cbind(as.data.frame(result))
View(df)
n <- 1:15
df <- as.data.frame(n)
result <-ifelse(n %% 3 ==0 , "divisible by 3", "not divisible by 3")
df[,2] <- cbind(as.data.frame(result))
n <- 1:15
df <- as.data.frame(n)
df[,2] <- ifelse(n %% 3 ==0 , "divisible by 3", "not divisible by 3")
View(df)
?seq
?matrix
x <- matrix(NULL, 5,5)
for(i in 1:nrow(x)) {
for(j in 1:ncol(x)) {
x[i,j] <- (i+j)^2
}
x <- matrix(NULL, 5,5)
for(i in 1:nrow(x)) {
for(j in 1:ncol(x)) {
x[i,j] <- (i+j)^2
}
}
source('~/.active-rstudio-document', echo=TRUE)
x <- matrix(NULL, 5,5)
x <- matrix(NULL, 5,5)
x <- matrix(NA, 5,5)
x <- matrix(NA, 5,5)
for(i in 1:nrow(x)) {
for(j in 1:ncol(x)) {
x[i,j] <- (i+j)^2
}
}
View(x)
x <- matrix(NA, 5,5)
View(x)
for(i in 1:nrow(x)) {
for(j in 1:ncol(x)) {
x[i,j] <- (i+j)^2
}
}
df <- cbind(df,ifelse(n %% 3 ==0 , "divisible by 3", "not divisible by 3"))
n <- 1:15
df <- as.data.frame(n)
df <- cbind(df,ifelse(n %% 3 ==0 , "divisible by 3", "not divisible by 3"))
View(df)
lapply(list, function)
lapply
setwd("/Users/LeilaErbay/Desktop/LevelNeu2018/Labs/lab7")
rossmanInfo <- read.csv("Rossmann Lab - Data.csv")
View(rossmanInfo)
asstmtType <- as.data.frame(rossmanInfo$Assortment)
View(asstmtType)
table(assmtType)
table(asstmtType)
barplot(asstmtType)
barplot(unique(asstmtType))
asstmtType <-(rossmanInfo$Assortment)
table(asstmtType)
barplot(asstmtType)
?barplot
barplot(as.vector(asstmtType))
barplot(length(unique(asstmtType)))
table(asstmtType)
barplot(table(asstmtType))
barplot(table(asstmtType), ylab = "frequencies", main = "Assortment Type Frequencies")
hist(asstmtType)
hist(table(asstmtType))
hist(table(asstmtType), breaks = 50,  freq = T)
hist(table(asstmtType), breaks = 10,  freq = T)
?hist
hist(table(asstmtType), breaks = 10,  freq = T, col="dimgrey")
hist(table(asstmtType), breaks = 10,  freq = T, col="dimgrey", main= "Frequencies of Assortment Type", xlab = "num occurrences")
#STORE SALES
data2014 <- rossmanInfo[rossmanInfo$Year == 2014,]
View(data2014)
?aggregate
#Q3b
probQ3b <- sum(profData$sex == "Female" & profData$rank== "AssocProf" & profData$yrs.since.phd > 10) / sum(profData$sex == "Female" & profData$rank== "AssocProf")
profData <- read_excel("Professor Salaries - Data.xlsx")
setwd("/Users/LeilaErbay/Desktop/LevelNeu2018/Labs/Lab8")
#TITLE: HIV LAB
#Author: LEILA ERBAY
hivData <- read.csv("region_prevalence.csv")
hivData<- cbind(hivData, NA)
names(hivData)[3] <- "posTest"
#Values from General Test
posGivenHiv <- 0.990
posGivenNHiv <- 0.015
#calculate the positive test totals per region
hivData$posTest <- posGivenHiv* hivData$Adult_Prevalence + posGivenNHiv*(1-hivData$Adult_Prevalence)
hivData<- cbind(hivData, NA)
names(hivData)[4] <- "posterior"
#calculate the posterior values per region
hivData$posterior<- (posGivenHiv* hivData$Adult_Prevalence) / hivData$posTest
lebanonPatient <- hivData[8,]
hivData <- hivData[, 1:4]
hivData <- cbind(hivData, NA)
names(hivData)[5] <- "pos2Tests"
hivData$pos2Tests <- (posGivenHiv^2)*hivData$Adult_Prevalence + (posGivenNHiv^2)*(1-hivData$Adult_Prevalence)
hivData <- cbind(hivData, NA)
names(hivData)[6] <- "posterior2Test"
hivData$posterior2Test <- ((posGivenHiv^2)*hivData$Adult_Prevalence)/hivData$pos2Tests
View(hivData)
#Q3b
probQ3b <- sum(profData$sex == "Female" & profData$rank== "AssocProf" & profData$yrs.since.phd > 10) / sum(profData$sex == "Female" & profData$rank== "AssocProf")
setwd("/Users/LeilaErbay/Desktop/LevelNeu2018/Labs/Lab7")
profData <- read_excel("Professor Salaries - Data.xlsx")
library(readxl)
profData <- read_excel("Professor Salaries - Data.xlsx")
#TITLE: PROFESSORS LAB
#AUTHOR: LEILA ERBAY
library(readxl)
profData <- read_excel("Professor Salaries - Data.xlsx")
#Q1 = 0.421875
probQ1 <- sum(profData$discipline == "A" & profData$salary >100000) / sum(profData$salary >100000)
#Q2 = 0.773049
probQ2 <- sum(profData$salary > 100000 & (profData$yrs.service >20 & profData$sex == "Male")) / sum(profData$yrs.service >20 & profData$sex == "Male")
#Q3a = 0.0251889
probQ3a <- sum(profData$sex == "Female" & profData$rank== "AssocProf") / nrow(profData)
#Q3b
probQ3b <- sum(profData$sex == "Female" & profData$rank== "AssocProf" & profData$yrs.since.phd > 10) / sum(profData$sex == "Female" & profData$rank== "AssocProf")
#Q4 = 0.619047
probQ4 <- sum(profData$salary <100000 & ( profData$sex == "Male" & profData$yrs.service <10)) / sum(profData$sex == "Male" & profData$yrs.service <10)
profData <- read_excel("Professor Salaries - Data.xlsx")
setwd("/Users/LeilaErbay/Desktop/LevelNeu2018/Labs/Lab8")
library(readxl)
profData <- read_excel("Professor Salaries - Data.xlsx")
#Q1 = 0.421875
probQ1 <- sum(profData$discipline == "A" & profData$salary >100000) / sum(profData$salary >100000)
#Q2 = 0.773049
probQ2 <- sum(profData$salary > 100000 & (profData$yrs.service >20 & profData$sex == "Male")) / sum(profData$yrs.service >20 & profData$sex == "Male")
#Q3a = 0.0251889
probQ3a <- sum(profData$sex == "Female" & profData$rank== "AssocProf") / nrow(profData)
#Q3b
probQ3b <- sum(profData$sex == "Female" & profData$rank== "AssocProf" & profData$yrs.since.phd > 10) / sum(profData$sex == "Female" & profData$rank== "AssocProf")
#Q4 = 0.619047
probQ4 <- sum(profData$salary <100000 & ( profData$sex == "Male" & profData$yrs.service <10)) / sum(profData$sex == "Male" & profData$yrs.service <10)
setwd("/Users/LeilaErbay/Desktop/LevelNeu2018/Labs/Lab7")
salesPerDay <- aggregate(DayOfWeek~Store, data2014, FUN = sum)
View(salesPerDay)
salesPerDay <- aggregate(Store~DayOfWeek, data2014, FUN = sum)
View(salesPerDay)
salesPerDay <- aggregate(Store~DayOfWeek, data2014, FUN = length)
salesPerDay <- aggregate(Sales~DayOfWeek, data2014, FUN = length)
salesPerDay <- aggregate(Sales~DayOfWeek, data2014, FUN = sum)
salesPerDay <- aggregate(Sales/nrow(data2014)~DayOfWeek, data2014, FUN = sum)
salesPerDay <- aggregate(Sales~DayOfWeek, data2014, FUN = ave)
salesPerDay <- aggregate(Sales/nrow(data2014)~DayOfWeek, data2014, FUN = sum)
salesPerDay <- aggregate(Sales~DayOfWeek, data2014, FUN = sum)
nrow(data2014)
nrow(data2014)
salesPerDay <- aggregate(Sales~DayOfWeek, data2014, FUN = sum)
?plot
plot(data2014$Sales, data2014$DayOfWeek, type = "p")
salesPerDayPlot <-plot(data2014$DayOfWeek, data2014$Sales, type = "l")
salesPerDayPlot <-plot(data2014$DayOfWeek, data2014$Sales, type = "p")
for(i in 1:7){
salesPerDay$AveSales[i] <- length(data2014[data2014$DayOfWeek == i,])
}
for(i in 1:7){
salesPerDay$AveSales[i] <- sum(data2014[data2014$DayOfWeek == i,])
}
for(i in 1:7){
salesPerDay$AveSales[i] <- salesPerDay$Sales / length(data2014[data2014$DayOfWeek == i,])
}
for(i in 1:7){
salesPerDay$AveSales[i] <- salesPerDay$Sales[i] / length(data2014[data2014$DayOfWeek == i,])
}
?ggplot
library(ggplot2)
?ggplot
ggplot(data2014, aes(DayOfWeek, Sales)) + geom_line() +
scale_x_date(format = "%b-%Y") + xlab("") + ylab("Daily Views")
timeSeries <-ggplot(data2014, aes(DayOfWeek, Sales)) + geom_line() + xlab("") + ylab("Daily Views")
View(timeSeries)
View(timeSeries)
print(timeSeries)
timeSeries <-ggplot(salesPerDay, aes(DayOfWeek, AveSales)) + geom_line() + xlab("") + ylab("Ave Sales")
print(timeSeries)
table(asstmtType)
tableAT <-table(asstmtType)
barplot(table(asstmtType), ylab = "frequencies", main = "Assortment Type Frequencies")
hist(table(asstmtType), breaks = 10,  freq = T, col="dimgrey", main= "Frequencies of Assortment Type", xlab = "num occurrences")
compDistDesc <- as.data.frame(stat.desc(rossmanInfo$CompetitionDistance))
compDistHist <- hist(rossmanInfo$CompetitionDistance, main = "Histogram of Competition Distance", xlab="Competition Distance", ylab = "Frequency", breaks = 50,  freq = T)
x <-rossmanInfo$CompetitionDistance
xfit <- seq(min(x), max(x), length = 1000)
yfit <- dnorm(xfit, mean = mean(x), sd = sd(x))
yfit <- yfit*diff(compDistHist$mids[1:2]*length(x))
lines(xfit, yfit, col = "blue", lwd = 2)
