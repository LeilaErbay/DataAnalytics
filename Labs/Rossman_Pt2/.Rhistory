#ALL GRAPHS FOR LINEAR MODELS
layout(1,1)
# plot(fitList[[i]])
# readkey()
#
}
}
#LAB 10:STORES LAB 3
#AUTHOR: LEILA ERBAY
setwd("/Users/LeilaErbay/Desktop/LevelNeu2018/Labs/Lab10")
library(readxl)
storesData <- read_excel("Store data.xlsx")
###### SECTION 1 ###############
storesData$SPACE_EFF <- storesData$SALES_UNITS/storesData$SPACE
storesData$LOG_TISP <- log10(storesData$SALES_TISP)
storesData$LOG_NDSA <- log10(storesData$NDSA)
storesData$LOG_SPACE <- log10(storesData$SPACE)
storesData$LOG_SPACE_EFF <- log10(storesData$SPACE_EFF)
fit <- data.frame(matrix(NA, nrow = 14, ncol = 2))
names(fit)<- c("corr_coefficient", "r_squared")
fitList <- list()
fitList[[1]] <- lm(storesData$SALES_TISP~storesData$SPACE)
fitList[[2]] <- lm(storesData$SALES_TISP~storesData$TXNS)
fitList[[3]] <- lm(storesData$SALES_TISP ~ storesData$NDSA)
fitList[[4]] <- lm(storesData$LOG_TISP~storesData$LOG_NDSA)
fitList[[5]] <- lm(storesData$LOG_TISP~ storesData$LOG_SPACE)
fitList[[6]] <- lm(storesData$LOG_TISP~storesData$MONTH)
fitList[[7]] <- lm(storesData$LOG_TISP~storesData$SPACE_EFF)
fitList[[8]] <- lm(storesData$LOG_TISP~storesData$LOG_SPACE_EFF)
fitList[[9]] <- lm(storesData$LOG_TISP~storesData$NDSA+ storesData$TXNS)
fitList[[10]] <- lm(storesData$LOG_TISP~storesData$MONTH+storesData$LOG_SPACE)
fitList[[11]] <- lm(storesData$LOG_TISP~storesData$MONTH + storesData$SPACE_EFF)
fitList[[12]]<- lm(storesData$LOG_TISP~storesData$MONTH + storesData$LOG_SPACE_EFF)
fitList[[13]] <- lm(storesData$LOG_TISP~storesData$MONTH+ storesData$LOG_NDSA)
fitList[[14]] <- lm(storesData$LOG_TISP~storesData$MONTH + storesData$LOG_NDSA + storesData$LOG_SPACE_EFF)
#DETERMINE r and R^2
for(i in 1:nrow(fit)){
fit[i,1]<-sqrt(summary(fitList[[i]])$r.squared)
fit[i,2] <- summary(fitList[[i]])$r.squared
}
#wait for enter
readkey <- function(){
cat ("Press [enter] to continue")
line <- readline()
}
#plotting graphs of each linear model's QQ and Residual
plotGraphs <- function(i){
if (length(fitList[[i]]$coefficients) > 2) next()
else{
plot(fitList[[i]], which=c(1,2))
}
}
#Print plots with AB LINE and QQ and RESIDUAL vs Predicted
for(i in 1:length(fitList)){
if(length(fitList[[i]]$coefficients)>2) {
print(c("list", i , "is a multiple regression"))
next()
}
else{
wordsX <- toString(fitList[[i]]$terms[[3]])
wordsY <- toString(fitList[[i]]$terms[[2]])
x <- unlist(strsplit(wordsX, ", "))[3]
y <- unlist(strsplit(wordsY, ", "))[3]
data <- cbind(storesData[,x], storesData[,y])
plot(data[,x], data[,y], xlab = x, ylab = y, main= c(x,  " vs" , y) )
abline(fitList[[i]], col = "red")
readkey()
plotGraphs(i)
#CHALLENGE:
hist(fitList[[i]]$residuals, xlab = c("residuals of ", x, "and", y), main=c("Histogram of Residuals of ", x, "and", y) )
#RESIDUAL vs TIME
residual <- fitList[[i]]$residuals
plot(storesData$MONTH, residual, xlab = "MONTHS", ylab= "Residuals", main = "Residuals vs Time")
readkey()
#ALL GRAPHS FOR LINEAR MODELS
layout(1,1)
# plot(fitList[[i]])
# readkey()
#
}
}
setwd("/Users/LeilaErbay/Desktop/LevelNeu2018/Labs/Lab11")
?chisq.test
test1 <- chisq.test(rbind(c(42,203),c(7,114)),correct)
View(test1)
pVal_test1 <- test1[["p.value"]]
test2 <-chisq.test(rbind(c(7,114),c(42,203)),correct)
pVal_test2 <- test2[["p.value"]]
test1[["p.value"]]
mx <- rbind(c(7,114),c(42,203))
View(mx)
test2 <-chisq.test(rbind(c(42,7),c(203,114)),correct)
pVal_test2 <- test2[["p.value"]]
test2[["p.value"]]
mx <- rbind(c(42,7),c(203,114))
mx2 <- rbind(c(42,7),c(203,114))
mx1 <- rbind(c(42,203,NA),c(7,114,NA),c(0,0,0))
View(mx2)
View(mx2)
View(mx1)
mx1 <- rbind(c(42,203,NA),c(7,114,NA),c(NULL,0,0))
mx1 <- rbind(c(42,203,NA),c(7,114,NA),c(NA,NA,NA))
?sum
for(j in nrow(mx1)){
for (i in length(mx1)){
if(i == length(mx1) & j != nrow(mx1)) mx1[j,i]<-sum(mx1[j,i-1],mx1[j,i-2])
else if(i == length(mx1) & j==nrow(mx1)) {
mx1[j,i-2]<- sum(mx1[j-2,i-2],mx1[j-1,i-2])
mx1[j,i-1] <- sum(mx1[j-2,i-1],mx1[j-1,i-1])
mx1[i,j] <-mx1[j,i-2]+mx1[j,i-1]
}
}
}
for(j in 1:nrow(mx1)){
for (i in 1:length(mx1)){
if(i == length(mx1) & j != nrow(mx1)) mx1[j,i]<-sum(mx1[j,i-1],mx1[j,i-2])
else if(i == length(mx1) & j==nrow(mx1)) {
mx1[j,i-2]<- sum(mx1[j-2,i-2],mx1[j-1,i-2])
mx1[j,i-1] <- sum(mx1[j-2,i-1],mx1[j-1,i-1])
mx1[i,j] <-mx1[j,i-2]+mx1[j,i-1]
}
}
}
addmargins(table(mx1))
?table
mx1 <- as.table(rbind(c(42,203),c(7,114)))
addmargins(mx1)
mx1_wMargins<-addmargins(mx1)
mx1_wProp <- prop.table(mx1_wMargins)
View(mx1_wMargins)
View(mx1_wProp)
View(mx1_wMargins)
mx1_wProp
write.table(mx1_wProp, file = "marginals with prob", sep = ",", quote = FALSE, row.names = F)
mx1_wProp <- prop.table(mx1)
mx1_wProp
write.table(mx1_wProp, file = "marginals with prob", sep = ",", quote = FALSE, row.names = F)
mx1_wMargins
length(mx1)
mx1
nrow(mx1)
ncol(mx1)
mx1_wMargins
nrow(mx1_wMargins)
for(i in 1:nrow(mx1_wMargins)-1){
for(j in 1:ncol(mx1_wMargins)-1){
mx1_observed[i,j] <- mx1_wMargins[i,j]/mx1_wMargins[nrow(mx1_wMargins),ncol(mx1_wMargins)]
}
}
mx1_observed <- matrix(nrow=2, ncol=2)
View(mx1_observed)
#OBSERVED
for(i in 1:nrow(mx1_wMargins)-1){
for(j in 1:ncol(mx1_wMargins)-1){
mx1_observed[i,j] <- mx1_wMargins[i,j]/mx1_wMargins[nrow(mx1_wMargins),ncol(mx1_wMargins)]
}
}
mx1_wMarginsProb <- matrix(nrow=3, ncol=3)
for(i in 1:nrow(mx1_wMargins)){
for(j in 1:ncol(mx1_wMargins)){
mx1_wMarginsProb[i,j] <-mx1_wMargins[i,j]/mx1_wMargins[nrow(mx1_wMargins),ncol(mx1_wMargins)]
}
}
View(mx1_wMarginsProb)
mx1_observed <- matrix(nrow=3, ncol=3)
#OBSERVED
for(i in 1:nrow(mx1_wMargins)-1){
for(j in 1:ncol(mx1_wMargins)-1){
mx1_observed[i,j] <- mx1_wMarginsProb[i,ncol(mx1_wMarginsProb)]*mx1_wMarginsProb[nrow(mx1_wMarginsProb),j]
}
}
mx1_observed <- matrix(nrow=2, ncol=2)
#OBSERVED
for(i in 1:nrow(mx1_wMargins)-1){
for(j in 1:ncol(mx1_wMargins)-1){
mx1_observed[i,j] <- mx1_wMarginsProb[i,ncol(mx1_wMarginsProb)]*mx1_wMarginsProb[nrow(mx1_wMarginsProb),j]
}
}
#Test for independence
test1 <- chisq.test(rbind(c(42,203),c(7,114)),correct= FALSE)
pVal_test1 <- test1[["p.value"]]
test1[["p.value"]]
test2 <-chisq.test(rbind(c(42,7),c(203,114)),correct= FALSE)
pVal_test2 <- test2[["p.value"]]
mx2 <- rbind(c(42,7),c(203,114))
mx1 <- as.table(rbind(c(42,203),c(7,114)))
mx1_wMargins<-addmargins(mx1)
mx1_wMargins
mx1_wMarginsProb <- matrix(nrow=3, ncol=3)
for(i in 1:nrow(mx1_wMargins)){
for(j in 1:ncol(mx1_wMargins)){
mx1_wMarginsProb[i,j] <-mx1_wMargins[i,j]/mx1_wMargins[nrow(mx1_wMargins),ncol(mx1_wMargins)]
}
}
View(mx1_wMarginsProb)
mx1_observed <- matrix(nrow=2, ncol=2)
#OBSERVED Probabilities
for(i in 1:nrow(mx1_wMargins)-1){
for(j in 1:ncol(mx1_wMargins)-1){
mx1_observed[i,j] <- mx1_wMarginsProb[i,ncol(mx1_wMarginsProb)]*mx1_wMarginsProb[nrow(mx1_wMarginsProb),j]
}
}
mx1_observedProb <- matrix(nrow=2, ncol=2)
#OBSERVED Probabilities
for(i in 1:nrow(mx1_wMargins)-1){
for(j in 1:ncol(mx1_wMargins)-1){
mx1_observedProb[i,j] <- mx1_wMarginsProb[i,ncol(mx1_wMarginsProb)]*mx1_wMarginsProb[nrow(mx1_wMarginsProb),j]
}
}
#LAB11: Chi-Squared Lab
#Author: Leila Erbay
setwd("/Users/LeilaErbay/Desktop/LevelNeu2018/Labs/Lab11")
#Test for independence
test1 <- chisq.test(rbind(c(42,203),c(7,114)),correct= FALSE)
pVal_test1 <- test1[["p.value"]]
test2 <-chisq.test(rbind(c(42,7),c(203,114)),correct= FALSE)
pVal_test2 <- test2[["p.value"]]
mx2 <- rbind(c(42,7),c(203,114))
mx1 <- as.table(rbind(c(42,203),c(7,114)))
mx1_wMargins<-addmargins(mx1)
mx1_wMargins
mx1_wMarginsProb <- matrix(nrow=3, ncol=3)
for(i in 1:nrow(mx1_wMargins)){
for(j in 1:ncol(mx1_wMargins)){
mx1_wMarginsProb[i,j] <-mx1_wMargins[i,j]/mx1_wMargins[nrow(mx1_wMargins),ncol(mx1_wMargins)]
}
}
mx1_observedProb <- matrix(nrow=2, ncol=2)
#OBSERVED Probabilities
for(i in 1:nrow(mx1_wMargins)-1){
for(j in 1:ncol(mx1_wMargins)-1){
mx1_observedProb[i,j] <- mx1_wMarginsProb[i,ncol(mx1_wMarginsProb)]*mx1_wMarginsProb[nrow(mx1_wMarginsProb),j]
}
}
#EXPECTED Probabilities
mx1_expectedVal <- matrix(nrow=2,ncol=2)
for(i in 1:nrow(mx1_observedProb)){
for(j in 1:ncol(mx1_observedProb)){
mx1_expectedVal[i,j] <- mx2[i,j]*mx1_observedProb[i,j]
}
}
View(mx1_expectedVal)
View(mx2)
mx1_matrix<- rbind(c(42,203),c(7,114))
#LAB11: Chi-Squared Lab
#Author: Leila Erbay
setwd("/Users/LeilaErbay/Desktop/LevelNeu2018/Labs/Lab11")
#Test for independence
test1 <- chisq.test(rbind(c(42,203),c(7,114)),correct= FALSE)
pVal_test1 <- test1[["p.value"]]
test2 <-chisq.test(rbind(c(42,7),c(203,114)),correct= FALSE)
pVal_test2 <- test2[["p.value"]]
mx1_matrix<- rbind(c(42,203),c(7,114))
mx1 <- as.table(rbind(c(42,203),c(7,114)))
mx1_wMargins<-addmargins(mx1)
mx1_wMargins
mx1_wMarginsProb <- matrix(nrow=3, ncol=3)
for(i in 1:nrow(mx1_wMargins)){
for(j in 1:ncol(mx1_wMargins)){
mx1_wMarginsProb[i,j] <-mx1_wMargins[i,j]/mx1_wMargins[nrow(mx1_wMargins),ncol(mx1_wMargins)]
}
}
mx1_observedProb <- matrix(nrow=2, ncol=2)
#OBSERVED Probabilities
for(i in 1:nrow(mx1_wMargins)-1){
for(j in 1:ncol(mx1_wMargins)-1){
mx1_observedProb[i,j] <- mx1_wMarginsProb[i,ncol(mx1_wMarginsProb)]*mx1_wMarginsProb[nrow(mx1_wMarginsProb),j]
}
}
#EXPECTED Probabilities
mx1_expectedVal <- matrix(nrow=2,ncol=2)
for(i in 1:nrow(mx1_observedProb)){
for(j in 1:ncol(mx1_observedProb)){
mx1_expectedVal[i,j] <- mx1_matrix[i,j]*mx1_observedProb[i,j]
}
}
mx1_wProp
write.table(mx1_wProp, file = "marginals with prob", sep = ",", quote = FALSE, row.names = F)
View(mx1_expectedVal)
View(mx1_matrix)
mx1_expectedVal <- matrix(nrow=2,ncol=2)
for(i in 1:nrow(mx1_expectedVal)){
for(j in 1:ncol(mx1_expectedVal)){
mx1_expectedVal[i,j] <- mx1_matrix[i,j]*mx1_observedProb[i,j]
}
}
View(mx1_expectedVal)
View(mx1_matrix)
View(mx1_observedProb)
chisq.test()
?chisq.test
testStat <- sum((mx1_observed-mx1_expectedVal)^2/mx1_expectedVal)
View(mx1_observed)
#LAB11: Chi-Squared Lab
#Author: Leila Erbay
setwd("/Users/LeilaErbay/Desktop/LevelNeu2018/Labs/Lab11")
#Test for independence
test1 <- chisq.test(rbind(c(42,203),c(7,114)),correct= FALSE)
pVal_test1 <- test1[["p.value"]]
test2 <-chisq.test(rbind(c(42,7),c(203,114)),correct= FALSE)
pVal_test2 <- test2[["p.value"]]
mx1_observed<- rbind(c(42,203),c(7,114))
mx1 <- as.table(rbind(c(42,203),c(7,114)))
mx1_wMargins<-addmargins(mx1)
mx1_wMargins
mx1_wMarginsProb <- matrix(nrow=3, ncol=3)
for(i in 1:nrow(mx1_wMargins)){
for(j in 1:ncol(mx1_wMargins)){
mx1_wMarginsProb[i,j] <-mx1_wMargins[i,j]/mx1_wMargins[nrow(mx1_wMargins),ncol(mx1_wMargins)]
}
}
mx1_observedProb <- matrix(nrow=2, ncol=2)
#OBSERVED Probabilities
for(i in 1:nrow(mx1_wMargins)-1){
for(j in 1:ncol(mx1_wMargins)-1){
mx1_observedProb[i,j] <- mx1_wMarginsProb[i,ncol(mx1_wMarginsProb)]*mx1_wMarginsProb[nrow(mx1_wMarginsProb),j]
}
}
#EXPECTED Probabilities
mx1_expectedVal <- matrix(nrow=2,ncol=2)
for(i in 1:nrow(mx1_expectedVal)){
for(j in 1:ncol(mx1_expectedVal)){
mx1_expectedVal[i,j] <- mx1_matrix[i,j]*mx1_observedProb[i,j]
}
}
write.table(mx1_wProp, file = "marginals with prob", sep = ",", quote = FALSE, row.names = F)
testStat <- sum((mx1_observed-mx1_expectedVal)^2/mx1_expectedVal)
testStat2 <- chisq.test(mx1_observed)
View(testStat2)
#EXPECTED Probabilities
mx1_expectedVal <- matrix(nrow=2,ncol=2)
for(i in 1:nrow(mx1_expectedVal)){
for(j in 1:ncol(mx1_expectedVal)){
mx1_expectedVal[i,j] <- mx1_observed[i,j]*mx1_observedProb[i,j]
}
}
#calculate test Stat :
testStat2 <- chisq.test(mx1_observed, correct= FALSE)
expectedMatrix <- matrix(nrow=2, ncol=2)
for(i in 1:nrow(expectedMatrix)){
for(j in 1:ncol(expectedMatrix)){
expectedMatrixl[i,j] <- mx1_wMargins[i,ncol(mx1_wMargins)]*mx1_wMargins[nrow(mx1_wMargins),j]
}
}
expectedMatrix <- matrix(nrow=2, ncol=2)
for(i in 1:nrow(expectedMatrix)){
for(j in 1:ncol(expectedMatrix)){
expectedMatrix[i,j] <- mx1_wMargins[i,ncol(mx1_wMargins)]*mx1_wMargins[nrow(mx1_wMargins),j]
}
}
View(expectedMatrix)
View(mx1_wMargins)
mx1_wMargins
for(i in 1:nrow(expectedMatrix)){
for(j in 1:ncol(expectedMatrix)){
expectedMatrix[i,j] <- mx1_wMargins[i,ncol(mx1_wMargins)]*mx1_wMargins[nrow(mx1_wMargins),j]/mx1_wMargins[nrow(mx1_wMargins), ncol(mx1_wMargins)]
}
}
#LAB11: Chi-Squared Lab
#Author: Leila Erbay
setwd("/Users/LeilaErbay/Desktop/LevelNeu2018/Labs/Lab11")
#Test for independence
test1 <- chisq.test(rbind(c(42,203),c(7,114)),correct= FALSE)
pVal_test1 <- test1[["p.value"]]
test2 <-chisq.test(rbind(c(42,7),c(203,114)),correct= FALSE)
pVal_test2 <- test2[["p.value"]]
mx1_observed<- rbind(c(42,203),c(7,114))
mx1 <- as.table(rbind(c(42,203),c(7,114)))
mx1_wMargins<-addmargins(mx1)
mx1_wMargins
mx1_wMarginsProb <- matrix(nrow=3, ncol=3)
for(i in 1:nrow(mx1_wMargins)){
for(j in 1:ncol(mx1_wMargins)){
mx1_wMarginsProb[i,j] <-mx1_wMargins[i,j]/mx1_wMargins[nrow(mx1_wMargins),ncol(mx1_wMargins)]
}
}
mx1_observedProb <- matrix(nrow=2, ncol=2)
#OBSERVED Probabilities
for(i in 1:nrow(mx1_wMargins)-1){
for(j in 1:ncol(mx1_wMargins)-1){
mx1_observedProb[i,j] <- mx1_wMarginsProb[i,ncol(mx1_wMarginsProb)]*mx1_wMarginsProb[nrow(mx1_wMarginsProb),j]
}
}
# #EXPECTED Probabilities     <- ####????? NOT CORRECT
# mx1_expectedVal <- matrix(nrow=2,ncol=2)
# for(i in 1:nrow(mx1_expectedVal)){
#   for(j in 1:ncol(mx1_expectedVal)){
#     mx1_expectedVal[i,j] <- mx1_observed[i,j]*mx1_observedProb[i,j]
#   }
# }
#calculate test Stat GOODNESS OF FIT:
testStat <- chisq.test(mx1_observed, correct= FALSE)
expectedMatrix <- matrix(nrow=2, ncol=2)
for(i in 1:nrow(expectedMatrix)){
for(j in 1:ncol(expectedMatrix)){
expectedMatrix[i,j] <- mx1_wMargins[i,ncol(mx1_wMargins)]*mx1_wMargins[nrow(mx1_wMargins),j]/mx1_wMargins[nrow(mx1_wMargins), ncol(mx1_wMargins)]
}
}
mx2_observed <- rbind(c(33,212), cbind(16,105))
#LAB11: Chi-Squared Lab
#Author: Leila Erbay
setwd("/Users/LeilaErbay/Desktop/LevelNeu2018/Labs/Lab11")
#Test for independence
test1 <- chisq.test(rbind(c(42,203),c(7,114)),correct= FALSE)
pVal_test1 <- test1[["p.value"]]
test2 <-chisq.test(rbind(c(42,7),c(203,114)),correct= FALSE)
pVal_test2 <- test2[["p.value"]]
mx1_observed<- rbind(c(42,203),c(7,114))
mx1 <- as.table(rbind(c(42,203),c(7,114)))
mx1_wMargins<-addmargins(mx1)
mx1_wMargins
mx1_wMarginsProb <- matrix(nrow=3, ncol=3)
for(i in 1:nrow(mx1_wMargins)){
for(j in 1:ncol(mx1_wMargins)){
mx1_wMarginsProb[i,j] <-mx1_wMargins[i,j]/mx1_wMargins[nrow(mx1_wMargins),ncol(mx1_wMargins)]
}
}
mx1_observedProb <- matrix(nrow=2, ncol=2)
#OBSERVED Probabilities
for(i in 1:nrow(mx1_wMargins)-1){
for(j in 1:ncol(mx1_wMargins)-1){
mx1_observedProb[i,j] <- mx1_wMarginsProb[i,ncol(mx1_wMarginsProb)]*mx1_wMarginsProb[nrow(mx1_wMarginsProb),j]
}
}
# #EXPECTED Probabilities     <- ####????? NOT CORRECT
# mx1_expectedVal <- matrix(nrow=2,ncol=2)
# for(i in 1:nrow(mx1_expectedVal)){
#   for(j in 1:ncol(mx1_expectedVal)){
#     mx1_expectedVal[i,j] <- mx1_observed[i,j]*mx1_observedProb[i,j]
#   }
# }
#calculate test Stat GOODNESS OF FIT:
testStat <- chisq.test(mx1_observed, correct= FALSE)
expectedMatrix <- matrix(nrow=2, ncol=2)
for(i in 1:nrow(expectedMatrix)){
for(j in 1:ncol(expectedMatrix)){
expectedMatrix[i,j] <- mx1_wMargins[i,ncol(mx1_wMargins)]*mx1_wMargins[nrow(mx1_wMargins),j]/mx1_wMargins[nrow(mx1_wMargins), ncol(mx1_wMargins)]
}
}
#test stat: INDEPENDENCE
mx2_observed <- rbind(c(33,212), cbind(16,105))
View(mx2_observed)
testStat2_indpt <- chisq.test(mx2_observed)
View(testStat2_indpt)
### part f - SIMULATION ###
chi2 <- rchisq(20000, df=1)
hist(chi2, 30)
abline(v=9.01)
### part f - SIMULATION ###
chi2 <- rchisq(20000, df=5)
hist(chi2, 30)
### part f - SIMULATION ###
chi2 <- rchisq(20000, df=10)
hist(chi2, 30)
### part f - SIMULATION ###
chi2 <- rchisq(20000, df=1)
hist(chi2, 30)
abline(v=9.01)
length(chi2[chi2 > 5])
length(chi2)
?chisq.test
?var.test
mx3_observed <- rbind(c(49, 196), c(0,121))
testStat3 <- chisq.test(mx3_observed)
View(testStat3)
pchisq(15, df=2, lower.tail=FALSE)
mx3_observed <- rbind(c(49, 196), c(0,121), correct = FALSE)
testStat3 <- chisq.test(mx3_observed)
testStat2_indpt <- chisq.test(mx2_observed)
mx2_observed <- rbind(c(33,212), cbind(16,105), correct = F)
testStat2_indpt <- chisq.test(mx2_observed)
View(testStat2_indpt)
testStat2_indpt <- chisq.test(mx2_observed, correct = F)
mx2_observed <- rbind(c(33,212), cbind(16,105))
testStat2_indpt <- chisq.test(mx2_observed, correct = F)
View(testStat2_indpt)
testStat2_indpt[["statistic"]]
mx3_observed <- rbind(c(49, 196), c(0,121))
testStat3 <- chisq.test(mx3_observed, correct = F)
mx2_observed <- rbind(c(33,212), cbind(16,105))
testStat2_indpt <- chisq.test(mx2_observed, correct = F)
### FISHER TEST ON FIRST SET OF DATA:
fisher.test(rbind(c(42,203),c(7,114)))
test1 <- chisq.test(rbind(c(42,203),c(7,114)),correct= FALSE)
pVal_test1 <- test1[["p.value"]]
### FISHER TEST ON FIRST SET OF DATA:
fisher.test(rbind(c(42,203),c(7,114)))
?pf
var2 <- 3.42^2
var1 <- 3.63^2
?var.test
f_test <- var.test(var2, var1, alternative = "less")
f_test <-var2/var1
f_test <-var1/var2
f_test <-var2/var1   #var2 < var1
chi2 <- rchisq(20000, df=1)
hist(chi2, 30)
abline(v=9.01)
length(chi2[chi2 > 5])
length(chi2)
471/20000
#### F TEST
var2 <- 3.42^2
#df = 49, 49
p_val <-1.6
?pf
pf(var2/var1, 49, 49, lower.tail = T)
pf(var1/var2, 49, 49, lower.tail = T)
pf(var2/var1, 49, 49, lower.tail = F)
pval <- pf(var2/var1, 49, 49, lower.tail = F)
rossData <- read.csv("Rossmann Lab - Data.csv")
rossData <- read.csv("Rossmann Lab - Data.csv")
